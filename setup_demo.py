"""Complete demo setup for IQStocker Bot."""

import os
import sys
import subprocess

def run_command(command, description):
    """Run command and show result."""
    
    print(f"\nüîÑ {description}")
    print("-" * 50)
    
    try:
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        
        if result.returncode == 0:
            print(f"‚úÖ {description} - —É—Å–ø–µ—à–Ω–æ!")
            if result.stdout.strip():
                print(result.stdout)
        else:
            print(f"‚ùå {description} - –æ—à–∏–±–∫–∞!")
            if result.stderr.strip():
                print(result.stderr)
        
        return result.returncode == 0
        
    except Exception as e:
        print(f"‚ùå {description} - –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def main():
    """Complete demo setup."""
    
    print("üöÄ IQStocker Bot - –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ-—Ä–µ–∂–∏–º–∞")
    print("=" * 60)
    print("–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞")
    print("=" * 60)
    
    # Check if virtual environment is active
    if not os.environ.get('VIRTUAL_ENV'):
        print("‚ö†Ô∏è  –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ!")
        print("–ê–∫—Ç–∏–≤–∏—Ä—É–π—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: venv\\Scripts\\activate")
        return
    
    print("‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ")
    
    # Setup steps
    steps = [
        ("python set_demo_limits.py", "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–µ–º–æ-–ª–∏–º–∏—Ç–æ–≤"),
        ("python create_test_csv.py", "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ CSV —Ñ–∞–π–ª–∞"),
        ("python demo_mode.py", "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏")
    ]
    
    success_count = 0
    
    for command, description in steps:
        if run_command(command, description):
            success_count += 1
    
    print("\n" + "=" * 60)
    print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
    print("=" * 60)
    print(f"–£—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {success_count}/{len(steps)} —à–∞–≥–æ–≤")
    
    if success_count == len(steps):
        print("üéâ –î–µ–º–æ-—Ä–µ–∂–∏–º –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω!")
        print("\n–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:")
        print("1. –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞: python run_bot_venv.py")
        print("2. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∞–ª–∏—Ç–∏–∫—É —Å —Ñ–∞–π–ª–æ–º test_portfolio.csv")
        print("3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞")
    else:
        print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —à–∞–≥–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
    
    print("=" * 60)

if __name__ == "__main__":
    main()
