"""Metrics calculator for analytics reports."""

from typing import Dict, Any, List
from decimal import Decimal


class MetricsCalculator:
    """Calculator for analytics metrics."""
    
    def __init__(self):
        self.new_works_months = 3  # Configurable parameter
    
    def calculate_portfolio_metrics(
        self, 
        sales_data: List[Dict[str, Any]], 
        portfolio_size: int,
        upload_limit: int,
        monthly_uploads: int,
        acceptance_rate: float
    ) -> Dict[str, Any]:
        """Calculate all portfolio metrics."""
        
        if not sales_data:
            return {}
        
        # Basic metrics
        total_sales = sum(item["sales"] for item in sales_data)
        total_revenue = sum(item["revenue"] for item in sales_data)
        
        # New works metrics
        new_works_sales = sum(
            item["sales"] for item in sales_data 
            if item["is_new_work"]
        )
        new_works_revenue = sum(
            item["revenue"] for item in sales_data 
            if item["is_new_work"]
        )
        
        # Calculate percentages
        portfolio_sold_percent = (total_sales / portfolio_size * 100) if portfolio_size > 0 else 0
        new_works_sales_percent = (new_works_sales / total_sales * 100) if total_sales > 0 else 0
        upload_limit_usage = (monthly_uploads / upload_limit * 100) if upload_limit > 0 else 0
        
        # Generate interpretations
        interpretations = self._generate_interpretations(
            portfolio_sold_percent,
            new_works_sales_percent,
            acceptance_rate,
            upload_limit_usage
        )
        
        return {
            "total_sales": total_sales,
            "total_revenue": total_revenue,
            "portfolio_sold_percent": round(portfolio_sold_percent, 2),
            "new_works_sales_percent": round(new_works_sales_percent, 2),
            "acceptance_rate": acceptance_rate,
            "upload_limit_usage": round(upload_limit_usage, 2),
            "interpretations": interpretations
        }
    
    def _generate_interpretations(
        self, 
        portfolio_sold_percent: float,
        new_works_sales_percent: float,
        acceptance_rate: float,
        upload_limit_usage: float
    ) -> Dict[str, str]:
        """Generate interpretations for metrics."""
        
        interpretations = {}
        
        # Portfolio sold percent interpretation
        if portfolio_sold_percent < 1:
            interpretations["portfolio_sold"] = "–ï—Å–ª–∏ —Ç—ã —Ç–æ–ª—å–∫–æ –Ω–µ–¥–∞–≤–Ω–æ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É –Ω–∞ —Å—Ç–æ–∫–∞—Ö - –≤—Å–µ –æ–∫. –î–∞–π –ø–æ—Ä—Ç—Ñ–µ–ª—é –≤—Ä–µ–º—è. –ù–æ –µ—Å–ª–∏ —Ç—ã –Ω–∞ —Å—Ç–æ–∫–∞—Ö —É–∂–µ –¥–∞–≤–Ω–æ - –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞."
        elif 1 <= portfolio_sold_percent < 2:
            interpretations["portfolio_sold"] = "–ü—Ä–æ–¥–∞–∂–∏ –µ—Å—Ç—å, –Ω–æ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Ä–∞—Å–∫—Ä—ã—Ç. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü–æ–±–µ–π—Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ –∞–±–æ–Ω–µ–Ω—Ç–æ–≤ –º–∞—Ç–µ—Ä–∏–∞–ª–∞..."
        elif 2.01 <= portfolio_sold_percent < 3:
            interpretations["portfolio_sold"] = "–¢—ã –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏! –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ. –î–æ–±–∞–≤–ª—è–π –±–æ–ª—å—à–µ —Ç–µ–º..."
        elif 3 <= portfolio_sold_percent < 5:
            interpretations["portfolio_sold"] = "–£ —Ç–µ–±—è —Å–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–π; —É–≤–µ–ª–∏—á–∏–≤–∞–π –æ–±—ä–µ–º—ã –∑–∞–≥—Ä—É–∑–∫–∏..."
        else:
            interpretations["portfolio_sold"] = "–†–∞–±–æ—Ç—ã üî•, –ø–æ—Ä—Ç—Ñ–µ–ª—å –ø—Ä–æ–¥–∞—ë—Ç—Å—è –º–æ—â–Ω–æ. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü–æ–¥–Ω–∏–º–∞–π –æ–±—ä—ë–º –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞, —Å–æ—Ö—Ä–∞–Ω—è—è —Ç–µ–∫—É—â–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ..."
        
        # New works sales percent interpretation
        if new_works_sales_percent == 100:
            interpretations["new_works"] = "–í—Å—ë –æ–∫, —Ç—ã —Ç–æ–ª—å–∫–æ –Ω–µ–¥–∞–≤–Ω–æ –Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É, —á—Ç–æ–±—ã –¥–µ–ª–∞—Ç—å –≤—ã–≤–æ–¥—ã. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –î–∞–π –≤—Ä–µ–º—è: –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞–±–∏—Ä–∞—é—Ç –æ–±–æ—Ä–æ—Ç—ã –ø–µ—Ä–≤—ã–µ 2-3 –º–µ—Å—è—Ü–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏. –ü—Ä–æ–¥–æ–ª–∂–∞–π —Ä–µ–≥—É–ª—è—Ä–Ω–æ –≥—Ä—É–∑–∏—Ç—å, —á—Ç–æ–±—ã —É–≤–µ–ª–∏—á–∏—Ç—å —à–∞–Ω—Å—ã - —ç—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ."
        elif new_works_sales_percent >= 30:
            interpretations["new_works"] = "–£ —Ç–µ–±—è –≤—Å—ë –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –≤—ã—Å—Ç—Ä–æ–µ–Ω–æ. –ù–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –∑–∞—Ö–æ–¥—è—Ç. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü—Ä–æ—Å—Ç–æ —É–≤–µ–ª–∏—á–∏–≤–∞–π –æ–±—ä–µ–º –∑–∞–≥—Ä—É–∑–∫–∏. –î–æ–±–∞–≤–ª—è–π –Ω–æ–≤—ã–µ —Ç–µ–º—ã, —á—Ç–æ–±—ã —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –∏ –µ—â–µ –±–æ–ª—å—à–µ —É–∫—Ä–µ–ø–∏—Ç—å –ø–æ–∑–∏—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è."
        elif 20 <= new_works_sales_percent < 30:
            interpretations["new_works"] = "–û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü—Ä–æ–¥–æ–ª–∂–∞–π –≥—Ä—É–∑–∏—Ç—å –≤ —Ç–æ–º –∂–µ –∫–∞—á–µ—Å—Ç–≤–µ. –î–æ–±–∞–≤–ª—è–π –Ω–æ–≤—ã–µ —Ç–µ–º—ã, —á—Ç–æ–±—ã —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç –∏ —É–∫—Ä–µ–ø–∏—Ç—å –ø–æ–∑–∏—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è. –ù–µ –ø—Ä–µ–∫—Ä–∞—â–∞–π —Ä–µ–≥—É–ª—è—Ä–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É."
        elif 10 <= new_works_sales_percent < 20:
            interpretations["new_works"] = "–ù–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—à—ë–ª –≤ –ø—Ä–æ–¥–∞–∂–∏, —ç—Ç–æ —Ö–æ—Ä–æ—à–∏–π –∑–Ω–∞–∫. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –£–≤–µ–ª–∏—á—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–º, —á—Ç–æ–±—ã –ø—Ä–∏–≤–ª–µ—á—å –Ω–æ–≤—ã—Ö –ø–æ–∫—É–ø–∞—Ç–µ–ª–µ–π. –£–¥–µ—Ä–∂–∏–≤–∞–π —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç—ã –Ω–∞—á–∞–ª–∏ –≤—ã—Ö–æ–¥–∏—Ç—å –≤ —Ç–æ–ø."
        else:
            interpretations["new_works"] = "–ï—Å–ª–∏ —Ç—ã —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª –≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç ‚Äî –≤—Å—ë –≤–ø–µ—Ä–µ–¥–∏, –Ω–µ –ø–µ—Ä–µ–∂–∏–≤–∞–π. –ù–æ –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ—à—å –Ω–æ–≤–æ–µ —É–∂–µ 3+ –º–µ—Å—è—Ü–∞, –∑–Ω–∞—á–∏—Ç –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –Ω–æ–≤—ã—Ö —Ä–∞–±–æ—Ç: –ü–æ—Å–º–æ—Ç—Ä–∏ –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å, –≤ —á–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ –∏ –∫–∞–∫ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏. –ü—Ä–æ–≤–µ—Ä—å —Ä–µ–≥—É–ª—è—Ä–Ω–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏."
        
        # Acceptance rate interpretation
        if acceptance_rate < 30:
            interpretations["acceptance_rate"] = "–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–ª–∞–±—ã–π. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü–æ—Å–º–æ—Ç—Ä–∏ –æ–±—É—á–∞—é—â–∏–µ –≤–∏–¥–µ–æ –∏ —Ä–∞–∑–±–µ—Ä–∏—Å—å, –≥–¥–µ –∏–º–µ–Ω–Ω–æ –æ—à–∏–±–∫–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ..."
        elif 31 <= acceptance_rate < 50:
            interpretations["acceptance_rate"] = "–ï—Å—Ç—å –Ω–∞–¥ —á–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü–µ—Ä–µ—Å–º–æ—Ç—Ä–∏ —É—á–µ–±–Ω—ã–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏, —á—Ç–æ–±—ã –ø–æ–¥—Ç—è–Ω—É—Ç—å —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞..."
        elif 50 <= acceptance_rate < 55:
            interpretations["acceptance_rate"] = "–≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å, —Å –∫–æ—Ç–æ—Ä—ã–º —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∞–≤—Ç–æ—Ä–æ–≤. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü—Ä–æ–¥–æ–ª–∂–∞–π –≥—Ä—É–∑–∏—Ç—å, –Ω–æ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å–º–æ—Ç—Ä–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫—É..."
        elif 55 <= acceptance_rate < 65:
            interpretations["acceptance_rate"] = "–£ —Ç–µ–±—è —Å–∏–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–π —Ç–µ–∫—É—â–∏–µ —É–¥–∞—á–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
        else:
            interpretations["acceptance_rate"] = "–¢–∞–∫–∞—è –ø—Ä–∏–µ–º–∫–∞ —Å–µ–π—á–∞—Å –¥–∞–ª–µ–∫–æ –Ω–µ —É –≤—Å–µ—Ö. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π –∫–∞—á–µ—Å—Ç–≤–æ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π –æ–±—ä—ë–º..."
        
        # Upload limit usage interpretation
        if upload_limit_usage <= 30:
            interpretations["upload_limit"] = "–¢—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —Å–≤–æ–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ó–∞–≥—Ä—É–∂–∞–π –±–æ–ª—å—à–µ..."
        elif 30 < upload_limit_usage <= 60:
            interpretations["upload_limit"] = "–•–æ—Ä–æ—à–µ–µ –Ω–∞—á–∞–ª–æ, –Ω–æ –ø–æ–∫–∞ –Ω–µ –¥–æ—Ç—è–≥–∏–≤–∞–µ—à—å –¥–æ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –°—Ç–∞–≤—å —Ü–µ–ª—å —Ö–æ—Ç—è –±—ã 70‚Äì80% –ª–∏–º–∏—Ç–∞..."
        elif 60 < upload_limit_usage <= 80:
            interpretations["upload_limit"] = "–¢—ã —Ä–∞–±–æ—Ç–∞–µ—à—å –≤ —Ö–æ—Ä–æ—à–µ–º —Ç–µ–º–ø–µ, –Ω–æ –µ—Å—Ç—å –∑–∞–ø–∞—Å –¥–ª—è —Ä–æ—Å—Ç–∞. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –î–æ—Ç—è–Ω–∏ –¥–æ –º–∞–∫—Å–∏–º—É–º–∞ –ª–∏–º–∏—Ç–∞..."
        elif 80 < upload_limit_usage <= 95:
            interpretations["upload_limit"] = "–û—Ç–ª–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Ç—ã –±–ª–∏–∑–∫–æ –∫ –º–∞–∫—Å–∏–º—É–º—É. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –î–æ–±–µ–π –ª–∏–º–∏—Ç, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Ä–∞–±–æ—Ç 100%."
        else:
            interpretations["upload_limit"] = "–¢—ã –≤—ã–∂–∞–ª –∏–∑ –ª–∏–º–∏—Ç–∞ –≤—Å—ë, —á—Ç–æ –º–æ–∂–Ω–æ. –ß—Ç–æ –¥–µ–ª–∞—Ç—å: –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π —Ç–∞–∫—É—é —Å–∏—Å—Ç–µ–º—É –∑–∞–≥—Ä—É–∑–æ–∫ –∏ –¥–∞–ª—å—à–µ."
        
        return interpretations
