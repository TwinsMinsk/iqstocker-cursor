"""Fixed report generator according to specification."""

from datetime import datetime
from typing import Dict, Any
from core.analytics.advanced_csv_processor import AdvancedProcessResult
from core.analytics.recommendation_engine import RecommendationEngine
from bot.lexicon.lexicon_ru import LEXICON_RU


class FixedReportGenerator:
    """Fixed report generator that follows specification requirements."""
    
    def __init__(self):
        self.recommendation_engine = RecommendationEngine()
    
    def generate_monthly_report(self, result: AdvancedProcessResult) -> str:
        """Generate monthly report according to specification."""
        
        # Get all recommendations using RecommendationEngine
        recommendations = self.recommendation_engine.get_all_recommendations(
            portfolio_rate=result.portfolio_sold_percent,
            new_work_rate=result.new_works_sales_percent,
            limit_usage=result.upload_limit_usage,
            acceptance_rate=result.acceptance_rate
        )
        
        # Use template from lexicon_ru.py
        report = LEXICON_RU['final_analytics_report_header'].format(
            month_year=result.period_human_ru.upper()
        )
        
        report += "\n\n" + LEXICON_RU['final_analytics_report_body'].format(
            sales_count=result.rows_used,
            total_revenue=result.total_revenue_usd,
            sell_through_rate=result.portfolio_sold_percent,
            new_work_rate=result.new_works_sales_percent,
            acceptance_rate=result.acceptance_rate,
            limit_usage_rate=result.upload_limit_usage,
            portfolio_rate_recommendation=recommendations['portfolio_rate_recommendation'],
            new_work_rate_recommendation=recommendations['new_work_rate_recommendation'],
            limit_usage_recommendation=recommendations['limit_usage_recommendation'],
            acceptance_rate_recommendation=recommendations['acceptance_rate_recommendation']
        )
        
        report += "\n\n" + LEXICON_RU['final_analytics_report_footer']
        
        return report
    
    def generate_top_themes_report(self, result: AdvancedProcessResult, subscription_type: str) -> str:
        """Generate top themes report."""
        
        period_text = result.period_human_ru
        
        if result.top10_by_revenue.empty:
            return f"""üèÜ <b>–¢–û–ü –¢–ï–ú –ü–û –ü–†–û–î–ê–ñ–ê–ú –ò –î–û–•–û–î–£</b>

–ê–Ω–∞–ª–∏–∑ –∑–∞ {period_text}:
–¢–æ–ø —Ç–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.

‚ùóÔ∏è –í—Å–µ —Ç–æ–ø-—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏. –¢—ã –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –º–æ–∂–µ—à—å –∑–∞–π—Ç–∏ —Å—é–¥–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö.

üí° –°–æ–≤–µ—Ç: –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç–∏ —Ç–µ–º—ã –≤ —Å–≤–æ–∏—Ö –±—É–¥—É—â–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏—è—Ö –∏ —Å—ä–µ–º–∫–∞—Ö ‚Äî –æ–Ω–∏ —É–∂–µ –¥–æ–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –Ω–∞ –Ω–∏—Ö –µ—â–µ –±–æ–ª—å—à–µ —Ä–∞–±–æ—Ç."""
        
        # Determine how many themes to show
        if subscription_type == "PRO":
            themes_to_show = min(5, len(result.top10_by_revenue))
            themes_text = "<b>–¢–æ–ø-5 —Ç–µ–º:</b>"
        else:  # ULTRA
            themes_to_show = min(10, len(result.top10_by_revenue))
            themes_text = "<b>–¢–æ–ø-10 —Ç–µ–º:</b>"
        
        # Format themes
        themes_list = []
        for i, (_, row) in enumerate(result.top10_by_revenue.head(themes_to_show).iterrows(), 1):
            themes_list.append(
                f"{i}. {row['asset_title']} ‚Äî {int(row['total_sales'])} –ø—Ä–æ–¥–∞–∂/{float(row['total_revenue']):.2f}$"
            )
        
        return f"""üèÜ <b>–¢–û–ü –¢–ï–ú –ü–û –ü–†–û–î–ê–ñ–ê–ú –ò –î–û–•–û–î–£</b>

–ê–Ω–∞–ª–∏–∑ –∑–∞ {period_text}:

{themes_text}
{chr(10).join(themes_list)}

‚ùóÔ∏è –í—Å–µ —Ç–æ–ø-—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏. –¢—ã –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –º–æ–∂–µ—à—å –∑–∞–π—Ç–∏ —Å—é–¥–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö.

üí° –°–æ–≤–µ—Ç: –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç–∏ —Ç–µ–º—ã –≤ —Å–≤–æ–∏—Ö –±—É–¥—É—â–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏—è—Ö –∏ —Å—ä–µ–º–∫–∞—Ö ‚Äî –æ–Ω–∏ —É–∂–µ –¥–æ–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –Ω–∞ –Ω–∏—Ö –µ—â–µ –±–æ–ª—å—à–µ —Ä–∞–±–æ—Ç."""

