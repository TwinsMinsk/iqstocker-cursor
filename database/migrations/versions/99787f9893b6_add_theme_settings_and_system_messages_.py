"""Add theme settings and system messages for admin panel

Revision ID: 99787f9893b6
Revises: 3d4a9c658cf9
Create Date: 2025-10-21 15:29:35.057939

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '99787f9893b6'
down_revision = '3d4a9c658cf9'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_messages',
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('text', sa.String(length=2000), nullable=False),
    sa.PrimaryKeyConstraint('key')
    )
    op.add_column('analytics_reports', sa.Column('total_sales', sa.Integer(), nullable=False))
    op.add_column('analytics_reports', sa.Column('total_revenue', sa.Numeric(precision=10, scale=2), nullable=False))
    op.add_column('analytics_reports', sa.Column('portfolio_sold_percent', sa.Numeric(precision=5, scale=2), nullable=False))
    op.add_column('analytics_reports', sa.Column('new_works_sales_percent', sa.Numeric(precision=5, scale=2), nullable=False))
    op.add_column('analytics_reports', sa.Column('acceptance_rate_calc', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('analytics_reports', sa.Column('upload_limit_usage', sa.Numeric(precision=5, scale=2), nullable=True))
    op.create_index(op.f('ix_analytics_reports_csv_analysis_id'), 'analytics_reports', ['csv_analysis_id'], unique=False)
    op.create_index(op.f('ix_analytics_reports_id'), 'analytics_reports', ['id'], unique=False)
    op.drop_constraint('fk_analytics_reports_csv_analysis_id', 'analytics_reports', type_='foreignkey')
    op.drop_constraint('fk_analytics_reports_user_id', 'analytics_reports', type_='foreignkey')
    op.create_foreign_key(None, 'analytics_reports', 'csv_analyses', ['csv_analysis_id'], ['id'])
    op.drop_column('analytics_reports', 'user_id')
    op.drop_column('analytics_reports', 'report_data')
    op.add_column('asset_details', sa.Column('tags', sa.JSON(), nullable=True))
    op.add_column('asset_details', sa.Column('scraped_at', sa.DateTime(), nullable=False))
    op.add_column('asset_details', sa.Column('adobe_url', sa.String(length=1000), nullable=True))
    op.alter_column('asset_details', 'asset_id',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.create_index(op.f('ix_asset_details_asset_id'), 'asset_details', ['asset_id'], unique=True)
    op.create_index(op.f('ix_asset_details_id'), 'asset_details', ['id'], unique=False)
    op.drop_constraint('fk_asset_details_csv_analysis_id', 'asset_details', type_='foreignkey')
    op.drop_column('asset_details', 'csv_analysis_id')
    op.drop_column('asset_details', 'created_at')
    op.drop_column('asset_details', 'downloads_count')
    op.drop_column('asset_details', 'keywords')
    op.drop_column('asset_details', 'category')
    op.add_column('audit_logs', sa.Column('log_id', sa.String(length=36), nullable=False))
    op.add_column('audit_logs', sa.Column('admin_username', sa.String(length=100), nullable=False))
    op.add_column('audit_logs', sa.Column('admin_ip', sa.String(length=45), nullable=True))
    op.add_column('audit_logs', sa.Column('resource_type', sa.String(length=100), nullable=True))
    op.add_column('audit_logs', sa.Column('resource_id', sa.String(length=100), nullable=True))
    op.add_column('audit_logs', sa.Column('request_method', sa.String(length=10), nullable=True))
    op.add_column('audit_logs', sa.Column('request_path', sa.String(length=500), nullable=True))
    op.add_column('audit_logs', sa.Column('old_values', sa.JSON(), nullable=True))
    op.add_column('audit_logs', sa.Column('new_values', sa.JSON(), nullable=True))
    op.add_column('audit_logs', sa.Column('description', sa.Text(), nullable=True))
    op.add_column('audit_logs', sa.Column('extra_data', sa.JSON(), nullable=True))
    op.alter_column('audit_logs', 'user_agent',
               existing_type=sa.VARCHAR(length=500),
               type_=sa.Text(),
               existing_nullable=True)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_log_id'), 'audit_logs', ['log_id'], unique=True)
    op.drop_constraint('fk_audit_logs_user_id', 'audit_logs', type_='foreignkey')
    op.drop_column('audit_logs', 'user_id')
    op.drop_column('audit_logs', 'ip_address')
    op.drop_column('audit_logs', 'details')
    op.add_column('broadcast_messages', sa.Column('text', sa.String(length=4000), nullable=False))
    op.add_column('broadcast_messages', sa.Column('recipients_count', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_broadcast_messages_id'), 'broadcast_messages', ['id'], unique=False)
    op.drop_column('broadcast_messages', 'content')
    op.drop_column('broadcast_messages', 'is_sent')
    op.drop_column('broadcast_messages', 'title')
    op.add_column('calendar_entries', sa.Column('month', sa.Integer(), nullable=False))
    op.add_column('calendar_entries', sa.Column('year', sa.Integer(), nullable=False))
    op.add_column('calendar_entries', sa.Column('content', sa.JSON(), nullable=True))
    op.add_column('calendar_entries', sa.Column('load_now_themes', sa.JSON(), nullable=True))
    op.add_column('calendar_entries', sa.Column('prepare_themes', sa.JSON(), nullable=True))
    op.add_column('calendar_entries', sa.Column('source', sa.String(length=50), nullable=False))
    op.alter_column('calendar_entries', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=1000),
               existing_nullable=True)
    op.create_index(op.f('ix_calendar_entries_id'), 'calendar_entries', ['id'], unique=False)
    op.drop_column('calendar_entries', 'event_date')
    op.drop_column('calendar_entries', 'updated_at')
    op.drop_column('calendar_entries', 'is_active')
    op.drop_column('calendar_entries', 'title')
    op.add_column('csv_analyses', sa.Column('month', sa.Integer(), nullable=False))
    op.add_column('csv_analyses', sa.Column('year', sa.Integer(), nullable=False))
    op.add_column('csv_analyses', sa.Column('portfolio_size', sa.Integer(), nullable=True))
    op.add_column('csv_analyses', sa.Column('upload_limit', sa.Integer(), nullable=True))
    op.add_column('csv_analyses', sa.Column('monthly_uploads', sa.Integer(), nullable=True))
    op.add_column('csv_analyses', sa.Column('acceptance_rate', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('csv_analyses', sa.Column('profit_margin', sa.Numeric(precision=5, scale=2), nullable=True))
    op.add_column('csv_analyses', sa.Column('processed_at', sa.DateTime(), nullable=True))
    op.alter_column('csv_analyses', 'content_type',
               existing_type=postgresql.ENUM('PHOTOS', 'VIDEOS', 'MIXED', name='contenttype'),
               nullable=True)
    op.create_index(op.f('ix_csv_analyses_id'), 'csv_analyses', ['id'], unique=False)
    op.create_index(op.f('ix_csv_analyses_user_id'), 'csv_analyses', ['user_id'], unique=False)
    op.drop_constraint('fk_csv_analyses_user_id', 'csv_analyses', type_='foreignkey')
    op.create_foreign_key(None, 'csv_analyses', 'users', ['user_id'], ['id'])
    op.drop_column('csv_analyses', 'total_files')
    op.drop_column('csv_analyses', 'updated_at')
    op.drop_column('csv_analyses', 'filename')
    op.drop_column('csv_analyses', 'processed_files')
    op.add_column('global_themes', sa.Column('total_sales', sa.Integer(), nullable=False))
    op.add_column('global_themes', sa.Column('total_revenue', sa.Numeric(precision=10, scale=2), nullable=False))
    op.add_column('global_themes', sa.Column('authors_count', sa.Integer(), nullable=False))
    op.add_column('global_themes', sa.Column('last_updated', sa.DateTime(), nullable=False))
    op.create_index(op.f('ix_global_themes_id'), 'global_themes', ['id'], unique=False)
    op.create_unique_constraint(None, 'global_themes', ['theme_name'])
    op.drop_column('global_themes', 'updated_at')
    op.drop_column('global_themes', 'is_active')
    op.drop_column('global_themes', 'created_at')
    op.add_column('limits', sa.Column('analytics_total', sa.Integer(), nullable=False))
    op.add_column('limits', sa.Column('analytics_used', sa.Integer(), nullable=False))
    op.add_column('limits', sa.Column('themes_total', sa.Integer(), nullable=False))
    op.add_column('limits', sa.Column('themes_used', sa.Integer(), nullable=False))
    op.add_column('limits', sa.Column('top_themes_total', sa.Integer(), nullable=False))
    op.add_column('limits', sa.Column('top_themes_used', sa.Integer(), nullable=False))
    op.add_column('limits', sa.Column('last_theme_request_at', sa.DateTime(), nullable=True))
    op.create_index(op.f('ix_limits_id'), 'limits', ['id'], unique=False)
    op.create_index(op.f('ix_limits_user_id'), 'limits', ['user_id'], unique=True)
    op.drop_constraint('fk_limits_user_id', 'limits', type_='foreignkey')
    op.create_foreign_key(None, 'limits', 'users', ['user_id'], ['id'])
    op.drop_column('limits', 'analytics_limit')
    op.drop_column('limits', 'themes_limit')
    op.drop_column('limits', 'top_themes_limit')
    op.add_column('llm_settings', sa.Column('theme_request_interval_days', sa.Integer(), server_default='7', nullable=False))
    op.create_index(op.f('ix_llm_settings_id'), 'llm_settings', ['id'], unique=False)
    op.add_column('subscriptions', sa.Column('payment_id', sa.String(length=255), nullable=True))
    op.add_column('subscriptions', sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('subscriptions', sa.Column('discount_percent', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_subscriptions_user_id'), 'subscriptions', ['user_id'], unique=False)
    op.drop_constraint('fk_subscriptions_user_id', 'subscriptions', type_='foreignkey')
    op.create_foreign_key(None, 'subscriptions', 'users', ['user_id'], ['id'])
    op.drop_column('subscriptions', 'is_active')
    op.add_column('theme_requests', sa.Column('themes', sa.JSON(), nullable=False))
    op.add_column('theme_requests', sa.Column('requested_at', sa.DateTime(), nullable=False))
    op.create_index(op.f('ix_theme_requests_id'), 'theme_requests', ['id'], unique=False)
    op.create_index(op.f('ix_theme_requests_user_id'), 'theme_requests', ['user_id'], unique=False)
    op.drop_constraint('fk_theme_requests_user_id', 'theme_requests', type_='foreignkey')
    op.create_foreign_key(None, 'theme_requests', 'users', ['user_id'], ['id'])
    op.drop_column('theme_requests', 'status')
    op.drop_column('theme_requests', 'updated_at')
    op.drop_column('theme_requests', 'created_at')
    op.drop_column('theme_requests', 'theme_name')
    op.add_column('top_themes', sa.Column('sales_count', sa.Integer(), nullable=False))
    op.add_column('top_themes', sa.Column('revenue', sa.Numeric(precision=10, scale=2), nullable=False))
    op.add_column('top_themes', sa.Column('rank', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_top_themes_csv_analysis_id'), 'top_themes', ['csv_analysis_id'], unique=False)
    op.create_index(op.f('ix_top_themes_id'), 'top_themes', ['id'], unique=False)
    op.drop_constraint('fk_top_themes_csv_analysis_id', 'top_themes', type_='foreignkey')
    op.drop_constraint('fk_top_themes_user_id', 'top_themes', type_='foreignkey')
    op.create_foreign_key(None, 'top_themes', 'csv_analyses', ['csv_analysis_id'], ['id'])
    op.drop_column('top_themes', 'user_id')
    op.drop_column('top_themes', 'downloads_count')
    op.add_column('user_issued_themes', sa.Column('theme_id', sa.Integer(), nullable=False))
    op.create_index(op.f('ix_user_issued_themes_id'), 'user_issued_themes', ['id'], unique=False)
    op.create_index(op.f('ix_user_issued_themes_theme_id'), 'user_issued_themes', ['theme_id'], unique=False)
    op.create_index(op.f('ix_user_issued_themes_user_id'), 'user_issued_themes', ['user_id'], unique=False)
    op.create_unique_constraint('uq_user_theme', 'user_issued_themes', ['user_id', 'theme_id'])
    op.drop_constraint('fk_user_issued_themes_user_id', 'user_issued_themes', type_='foreignkey')
    op.create_foreign_key(None, 'user_issued_themes', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'user_issued_themes', 'global_themes', ['theme_id'], ['id'])
    op.drop_column('user_issued_themes', 'cooldown_until')
    op.drop_column('user_issued_themes', 'theme_name')
    op.add_column('video_lessons', sa.Column('url', sa.String(length=500), nullable=False))
    op.add_column('video_lessons', sa.Column('order', sa.Integer(), nullable=False))
    op.add_column('video_lessons', sa.Column('is_pro_only', sa.Boolean(), nullable=False))
    op.alter_column('video_lessons', 'description',
               existing_type=sa.TEXT(),
               type_=sa.String(length=1000),
               existing_nullable=True)
    op.create_index(op.f('ix_video_lessons_id'), 'video_lessons', ['id'], unique=False)
    op.drop_column('video_lessons', 'video_url')
    op.drop_column('video_lessons', 'thumbnail_url')
    op.drop_column('video_lessons', 'updated_at')
    op.drop_column('video_lessons', 'is_active')
    op.drop_column('video_lessons', 'duration_seconds')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('video_lessons', sa.Column('duration_seconds', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('video_lessons', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('video_lessons', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('video_lessons', sa.Column('thumbnail_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True))
    op.add_column('video_lessons', sa.Column('video_url', sa.VARCHAR(length=500), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_video_lessons_id'), table_name='video_lessons')
    op.alter_column('video_lessons', 'description',
               existing_type=sa.String(length=1000),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('video_lessons', 'is_pro_only')
    op.drop_column('video_lessons', 'order')
    op.drop_column('video_lessons', 'url')
    op.add_column('user_issued_themes', sa.Column('theme_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('user_issued_themes', sa.Column('cooldown_until', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'user_issued_themes', type_='foreignkey')
    op.drop_constraint(None, 'user_issued_themes', type_='foreignkey')
    op.create_foreign_key('fk_user_issued_themes_user_id', 'user_issued_themes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('uq_user_theme', 'user_issued_themes', type_='unique')
    op.drop_index(op.f('ix_user_issued_themes_user_id'), table_name='user_issued_themes')
    op.drop_index(op.f('ix_user_issued_themes_theme_id'), table_name='user_issued_themes')
    op.drop_index(op.f('ix_user_issued_themes_id'), table_name='user_issued_themes')
    op.drop_column('user_issued_themes', 'theme_id')
    op.add_column('top_themes', sa.Column('downloads_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('top_themes', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'top_themes', type_='foreignkey')
    op.create_foreign_key('fk_top_themes_user_id', 'top_themes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_top_themes_csv_analysis_id', 'top_themes', 'csv_analyses', ['csv_analysis_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_top_themes_id'), table_name='top_themes')
    op.drop_index(op.f('ix_top_themes_csv_analysis_id'), table_name='top_themes')
    op.drop_column('top_themes', 'rank')
    op.drop_column('top_themes', 'revenue')
    op.drop_column('top_themes', 'sales_count')
    op.add_column('theme_requests', sa.Column('theme_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('theme_requests', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('theme_requests', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('theme_requests', sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'theme_requests', type_='foreignkey')
    op.create_foreign_key('fk_theme_requests_user_id', 'theme_requests', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_theme_requests_user_id'), table_name='theme_requests')
    op.drop_index(op.f('ix_theme_requests_id'), table_name='theme_requests')
    op.drop_column('theme_requests', 'requested_at')
    op.drop_column('theme_requests', 'themes')
    op.add_column('subscriptions', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'subscriptions', type_='foreignkey')
    op.create_foreign_key('fk_subscriptions_user_id', 'subscriptions', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_subscriptions_user_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_column('subscriptions', 'discount_percent')
    op.drop_column('subscriptions', 'amount')
    op.drop_column('subscriptions', 'payment_id')
    op.drop_index(op.f('ix_llm_settings_id'), table_name='llm_settings')
    op.drop_column('llm_settings', 'theme_request_interval_days')
    op.add_column('limits', sa.Column('top_themes_limit', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('limits', sa.Column('themes_limit', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('limits', sa.Column('analytics_limit', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'limits', type_='foreignkey')
    op.create_foreign_key('fk_limits_user_id', 'limits', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_limits_user_id'), table_name='limits')
    op.drop_index(op.f('ix_limits_id'), table_name='limits')
    op.drop_column('limits', 'last_theme_request_at')
    op.drop_column('limits', 'top_themes_used')
    op.drop_column('limits', 'top_themes_total')
    op.drop_column('limits', 'themes_used')
    op.drop_column('limits', 'themes_total')
    op.drop_column('limits', 'analytics_used')
    op.drop_column('limits', 'analytics_total')
    op.add_column('global_themes', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('global_themes', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('global_themes', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'global_themes', type_='unique')
    op.drop_index(op.f('ix_global_themes_id'), table_name='global_themes')
    op.drop_column('global_themes', 'last_updated')
    op.drop_column('global_themes', 'authors_count')
    op.drop_column('global_themes', 'total_revenue')
    op.drop_column('global_themes', 'total_sales')
    op.add_column('csv_analyses', sa.Column('processed_files', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('csv_analyses', sa.Column('filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('csv_analyses', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('csv_analyses', sa.Column('total_files', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'csv_analyses', type_='foreignkey')
    op.create_foreign_key('fk_csv_analyses_user_id', 'csv_analyses', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_csv_analyses_user_id'), table_name='csv_analyses')
    op.drop_index(op.f('ix_csv_analyses_id'), table_name='csv_analyses')
    op.alter_column('csv_analyses', 'content_type',
               existing_type=postgresql.ENUM('PHOTOS', 'VIDEOS', 'MIXED', name='contenttype'),
               nullable=False)
    op.drop_column('csv_analyses', 'processed_at')
    op.drop_column('csv_analyses', 'profit_margin')
    op.drop_column('csv_analyses', 'acceptance_rate')
    op.drop_column('csv_analyses', 'monthly_uploads')
    op.drop_column('csv_analyses', 'upload_limit')
    op.drop_column('csv_analyses', 'portfolio_size')
    op.drop_column('csv_analyses', 'year')
    op.drop_column('csv_analyses', 'month')
    op.add_column('calendar_entries', sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('calendar_entries', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('calendar_entries', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('calendar_entries', sa.Column('event_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_calendar_entries_id'), table_name='calendar_entries')
    op.alter_column('calendar_entries', 'description',
               existing_type=sa.String(length=1000),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('calendar_entries', 'source')
    op.drop_column('calendar_entries', 'prepare_themes')
    op.drop_column('calendar_entries', 'load_now_themes')
    op.drop_column('calendar_entries', 'content')
    op.drop_column('calendar_entries', 'year')
    op.drop_column('calendar_entries', 'month')
    op.add_column('broadcast_messages', sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('broadcast_messages', sa.Column('is_sent', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('broadcast_messages', sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False))
    op.drop_index(op.f('ix_broadcast_messages_id'), table_name='broadcast_messages')
    op.drop_column('broadcast_messages', 'recipients_count')
    op.drop_column('broadcast_messages', 'text')
    op.add_column('audit_logs', sa.Column('details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('audit_logs', sa.Column('ip_address', sa.VARCHAR(length=45), autoincrement=False, nullable=True))
    op.add_column('audit_logs', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('fk_audit_logs_user_id', 'audit_logs', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    op.drop_index(op.f('ix_audit_logs_log_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.alter_column('audit_logs', 'user_agent',
               existing_type=sa.Text(),
               type_=sa.VARCHAR(length=500),
               existing_nullable=True)
    op.drop_column('audit_logs', 'extra_data')
    op.drop_column('audit_logs', 'description')
    op.drop_column('audit_logs', 'new_values')
    op.drop_column('audit_logs', 'old_values')
    op.drop_column('audit_logs', 'request_path')
    op.drop_column('audit_logs', 'request_method')
    op.drop_column('audit_logs', 'resource_id')
    op.drop_column('audit_logs', 'resource_type')
    op.drop_column('audit_logs', 'admin_ip')
    op.drop_column('audit_logs', 'admin_username')
    op.drop_column('audit_logs', 'log_id')
    op.add_column('asset_details', sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('asset_details', sa.Column('keywords', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('asset_details', sa.Column('downloads_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('asset_details', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('asset_details', sa.Column('csv_analysis_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('fk_asset_details_csv_analysis_id', 'asset_details', 'csv_analyses', ['csv_analysis_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_asset_details_id'), table_name='asset_details')
    op.drop_index(op.f('ix_asset_details_asset_id'), table_name='asset_details')
    op.alter_column('asset_details', 'asset_id',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('asset_details', 'adobe_url')
    op.drop_column('asset_details', 'scraped_at')
    op.drop_column('asset_details', 'tags')
    op.add_column('analytics_reports', sa.Column('report_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
    op.add_column('analytics_reports', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'analytics_reports', type_='foreignkey')
    op.create_foreign_key('fk_analytics_reports_user_id', 'analytics_reports', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key('fk_analytics_reports_csv_analysis_id', 'analytics_reports', 'csv_analyses', ['csv_analysis_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_analytics_reports_id'), table_name='analytics_reports')
    op.drop_index(op.f('ix_analytics_reports_csv_analysis_id'), table_name='analytics_reports')
    op.drop_column('analytics_reports', 'upload_limit_usage')
    op.drop_column('analytics_reports', 'acceptance_rate_calc')
    op.drop_column('analytics_reports', 'new_works_sales_percent')
    op.drop_column('analytics_reports', 'portfolio_sold_percent')
    op.drop_column('analytics_reports', 'total_revenue')
    op.drop_column('analytics_reports', 'total_sales')
    op.drop_table('system_messages')
    # ### end Alembic commands ###
