"""Set demo limits for any user."""

import os
import sys
from datetime import datetime

# Set environment variables for MVP
os.environ["DATABASE_URL"] = "sqlite:///iqstocker.db"
os.environ["REDIS_URL"] = "redis://localhost:6379/0"
os.environ["ADMIN_SECRET_KEY"] = "test_secret_key_123"
os.environ["ADMIN_PASSWORD"] = "admin123"

# Add project root to path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.database import SessionLocal
from database.models import User, SubscriptionType, Limits

def set_demo_limits(telegram_id: int = None):
    """Set demo limits for user."""
    
    print("üîÑ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–µ–º–æ-–ª–∏–º–∏—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 50)
    
    db = SessionLocal()
    try:
        # Find user
        if telegram_id:
            user = db.query(User).filter(User.telegram_id == telegram_id).first()
        else:
            # Get all users
            users = db.query(User).all()
            if not users:
                print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
                return
            
            print("–ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
            for i, u in enumerate(users):
                print(f"{i+1}. {u.username} ({u.telegram_id}) - {u.subscription_type.value}")
            
            try:
                choice = int(input("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–æ–º–µ—Ä): ")) - 1
                user = users[choice]
            except (ValueError, IndexError):
                print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
                return
        
        if not user:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        print(f"\n–í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username} ({user.telegram_id})")
        print(f"–¢–µ–∫—É—â–∏–π —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏: {user.subscription_type.value}")
        
        # Update user to TEST_PRO for demo
        user.subscription_type = SubscriptionType.TEST_PRO
        user.test_pro_started_at = datetime.utcnow()
        
        # Get or create limits
        limits = db.query(Limits).filter(Limits.user_id == user.id).first()
        
        if not limits:
            limits = Limits(user_id=user.id)
            db.add(limits)
        
        # Set generous demo limits
        limits.analytics_total = 10  # 10 –∞–Ω–∞–ª–∏—Ç–∏–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        limits.analytics_used = 0
        limits.themes_total = 20     # 20 —Ç–µ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        limits.themes_used = 0
        limits.top_themes_total = 20 # 20 —Ç–æ–ø-—Ç–µ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        limits.top_themes_used = 0
        
        db.commit()
        
        print("‚úÖ –î–µ–º–æ-–ª–∏–º–∏—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
        print(f"  - –ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–æ—Å—Ç—É–ø–Ω–æ: {limits.analytics_total}")
        print(f"  - –¢–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ: {limits.themes_total}")
        print(f"  - –¢–æ–ø-—Ç–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ: {limits.top_themes_total}")
        print(f"  - –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏: {user.subscription_type.value}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        db.rollback()
    finally:
        db.close()

def show_all_users():
    """Show all users and their limits."""
    
    print("\nüìä –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ –∏—Ö –ª–∏–º–∏—Ç—ã")
    print("=" * 50)
    
    db = SessionLocal()
    try:
        users = db.query(User).all()
        
        if not users:
            print("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return
        
        for user in users:
            limits = db.query(Limits).filter(Limits.user_id == user.id).first()
            
            print(f"\nüë§ {user.username} ({user.telegram_id})")
            print(f"   –ü–æ–¥–ø–∏—Å–∫–∞: {user.subscription_type.value}")
            
            if limits:
                print(f"   –ê–Ω–∞–ª–∏—Ç–∏–∫: {limits.analytics_used}/{limits.analytics_total}")
                print(f"   –¢–µ–º: {limits.themes_used}/{limits.themes_total}")
                print(f"   –¢–æ–ø-—Ç–µ–º: {limits.top_themes_used}/{limits.top_themes_total}")
            else:
                print("   –õ–∏–º–∏—Ç—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
    finally:
        db.close()

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        try:
            telegram_id = int(sys.argv[1])
            set_demo_limits(telegram_id)
        except ValueError:
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
    else:
        set_demo_limits()
    
    show_all_users()
    
    print("\n" + "=" * 50)
    print("üéâ –î–µ–º–æ-–ª–∏–º–∏—Ç—ã —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!")
    print("–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞.")
    print("=" * 50)
