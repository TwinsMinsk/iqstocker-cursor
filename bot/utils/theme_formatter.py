"""Theme formatting utilities for beautiful message display."""

from datetime import datetime
from typing import List, Dict, Any


def format_themes(themes: List[Dict[str, Any]], requested_date: str = None) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–º—ã –≤ –∫—Ä–∞—Å–∏–≤–æ–µ HTML-—Å–æ–æ–±—â–µ–Ω–∏–µ.
    
    Args:
        themes: –°–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π —Å —Ç–µ–º–∞–º–∏
        requested_date: –î–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞ —Ç–µ–º
    
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
    """
    # –ú–∞–ø–ø–∏–Ω–≥ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
    source_mapping = {
        'seasonal': 'üåø –°–µ–∑–æ–Ω–Ω—ã–π —Ç—Ä–µ–Ω–¥',
        'trending': 'üìà –†—ã–Ω–æ—á–Ω—ã–π —Ç—Ä–µ–Ω–¥',
        'personal': '‚≠ê –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è',
        'market': 'üî• –ü–æ–ø—É–ª—è—Ä–Ω–∞—è —Ç–µ–º–∞'
    }
    
    # –ú–∞–ø–ø–∏–Ω–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
    confidence_mapping = {
        'high': ('–í—ã—Å–æ–∫–∞—è', 'üü¢'),
        'medium': ('–°—Ä–µ–¥–Ω—è—è', 'üü°'),
        'low': ('–ù–∏–∑–∫–∞—è', 'üü†')
    }
    
    # –ú–∞–ø–ø–∏–Ω–≥ –ø—Ä–æ–≥–Ω–æ–∑–∞
    performance_mapping = {
        'high': 'üöÄ –í—ã—Å–æ–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        'medium': 'üìä –°—Ä–µ–¥–Ω—è—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        'low': 'üìâ –ë–∞–∑–æ–≤–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å'
    }
    
    # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–º
    theme_emojis = {
        'halloween': 'üéÉ',
        'autumn': 'üçÇ',
        'winter': '‚ùÑÔ∏è',
        'christmas': 'üéÑ',
        'new year': 'üéÜ',
        'spring': 'üå∏',
        'summer': '‚òÄÔ∏è',
        'love': '‚ù§Ô∏è',
        'valentine': 'üíù',
        'easter': 'ü•ö',
        'thanksgiving': 'ü¶É',
        '—Ö—ç–ª–ª–æ—É–∏–Ω': 'üéÉ',
        '–æ—Å–µ–Ω—å': 'üçÇ',
        '–æ—Å–µ–Ω–Ω–∏–µ': 'üçÇ',
        '–∑–∏–º–∞': '‚ùÑÔ∏è',
        '–∑–∏–º–Ω–∏–µ': '‚ùÑÔ∏è',
        '—Ä–æ–∂–¥–µ—Å—Ç–≤–æ': 'üéÑ',
        '—Ä–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–µ': 'üéÑ',
        '–Ω–æ–≤—ã–π –≥–æ–¥': 'üéÜ',
        '–≤–µ—Å–Ω–∞': 'üå∏',
        '–≤–µ—Å–µ–Ω–Ω–∏–µ': 'üå∏',
        '–ª–µ—Ç–æ': '‚òÄÔ∏è',
        '–ª–µ—Ç–Ω–∏–µ': '‚òÄÔ∏è',
        '–ª—é–±–æ–≤—å': '‚ù§Ô∏è',
        '–ª—é–±–æ–≤–Ω—ã–µ': '‚ù§Ô∏è',
        '–≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞': 'üíù',
        '–ø–∞—Å—Ö–∞': 'ü•ö',
        '–ø–∞—Å—Ö–∞–ª—å–Ω—ã–µ': 'ü•ö',
        '–±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω–∏–µ': 'ü¶É'
    }
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    date_str = requested_date or datetime.now().strftime('%d.%m.%Y')
    result = f"üìå <b>–¢–≤–æ–∏ —Ç–µ–º—ã –Ω–µ–¥–µ–ª–∏</b> (<i>–∑–∞–ø—Ä–æ—à–µ–Ω—ã {date_str}</i>)\n\n"
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é —Ç–µ–º—É
    for i, theme_data in enumerate(themes, 1):
        # –ï—Å–ª–∏ —Ç–µ–º–∞ - —Å—Ç—Ä–æ–∫–∞, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —Å–ª–æ–≤–∞—Ä—å
        if isinstance(theme_data, str):
            theme_name = theme_data
            source = 'market'
            confidence = 'medium'
            reason = '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ä—ã–Ω–æ—á–Ω–∞—è —Ç–µ–º–∞'
            performance = 'medium'
        else:
            theme_name = theme_data.get('theme', theme_data.get('theme_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Ç–µ–º–∞'))
            source = theme_data.get('source', 'market')
            confidence = theme_data.get('confidence', 'medium')
            reason = theme_data.get('reason', '–ê–∫—Ç—É–∞–ª—å–Ω–∞—è —Ç–µ–º–∞')
            performance = theme_data.get('predicted_performance', 'medium')
        
        # –ü–æ–¥–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–º—ã
        theme_emoji = ''
        theme_lower = theme_name.lower()
        for keyword, emoji in theme_emojis.items():
            if keyword in theme_lower or theme_lower in keyword:
                theme_emoji = emoji
                break
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–º—É
        result += f"<b>{i}. {theme_name}</b> {theme_emoji}\n"
        result += f"   ‚ñ´Ô∏è <i>–ò—Å—Ç–æ—á–Ω–∏–∫:</i> {source_mapping.get(source, '–û–±—â–∞—è —Ç–µ–º–∞')}\n"
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å
        conf_text, conf_emoji = confidence_mapping.get(confidence, ('–°—Ä–µ–¥–Ω—è—è', 'üü°'))
        conf_percent = {
            'high': 80,
            'medium': 60,
            'low': 40
        }.get(confidence, 60)
        result += f"   ‚ñ´Ô∏è <i>–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å:</i> {conf_text} {conf_emoji} ({conf_percent}%)\n"
        
        result += f"   ‚ñ´Ô∏è <i>–ü—Ä–æ–≥–Ω–æ–∑:</i> {performance_mapping.get(performance, 'üìä –°—Ä–µ–¥–Ω—è—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å')}\n"
        
        if reason and i <= 3:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏—á–∏–Ω—É —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 3 —Ç–µ–º
            result += f"   ‚ñ´Ô∏è <i>–ü–æ—á–µ–º—É:</i> {reason}\n"
        
        result += "\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É—Ç–µ—Ä
    result += "‚ùóÔ∏è <b>–í–∞–∂–Ω–æ:</b> –í—Å–µ —Ç–≤–æ–∏ —Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ. "
    result += "–¢—ã –º–æ–∂–µ—à—å –∑–∞—Ö–æ–¥–∏—Ç—å —Å—é–¥–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö.\n\n"
    
    result += "‚ö°Ô∏è <b>–°–æ–≤–µ—Ç:</b> –ù–µ —Ç–µ—Ä—è–π –≤—Ä–µ–º—è! –ß–µ–º –±—ã—Å—Ç—Ä–µ–µ —ç—Ç–∏ —Ç–µ–º—ã –ø–æ–ø–∞–¥—É—Ç –≤ —Ç–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å, "
    result += "—Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–≤–æ–∏ —Ä–∞–±–æ—Ç—ã –ø–æ–ª—É—á–∞—Ç –±–æ–ª—å—à–µ –ø—Ä–æ–¥–∞–∂.\n\n"
    
    result += "üïî <i>–°–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –¥–æ—Å—Ç—É–ø–µ–Ω —á–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—é –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ.</i>"
    
    return result


def format_single_theme(theme: str) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ–¥–Ω—É —Ç–µ–º—É –¥–ª—è FREE –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    
    Args:
        theme: –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–º—ã
    
    Returns:
        –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
    """
    # –≠–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–º
    theme_emojis = {
        'halloween': 'üéÉ',
        'autumn': 'üçÇ',
        'winter': '‚ùÑÔ∏è',
        'christmas': 'üéÑ',
        'new year': 'üéÜ',
        'spring': 'üå∏',
        'summer': '‚òÄÔ∏è',
        'love': '‚ù§Ô∏è',
        'valentine': 'üíù',
        'easter': 'ü•ö',
        'thanksgiving': 'ü¶É',
        '—Ö—ç–ª–ª–æ—É–∏–Ω': 'üéÉ',
        '–æ—Å–µ–Ω—å': 'üçÇ',
        '–æ—Å–µ–Ω–Ω–∏–µ': 'üçÇ',
        '–∑–∏–º–∞': '‚ùÑÔ∏è',
        '–∑–∏–º–Ω–∏–µ': '‚ùÑÔ∏è',
        '—Ä–æ–∂–¥–µ—Å—Ç–≤–æ': 'üéÑ',
        '—Ä–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∏–µ': 'üéÑ',
        '–Ω–æ–≤—ã–π –≥–æ–¥': 'üéÜ',
        '–≤–µ—Å–Ω–∞': 'üå∏',
        '–≤–µ—Å–µ–Ω–Ω–∏–µ': 'üå∏',
        '–ª–µ—Ç–æ': '‚òÄÔ∏è',
        '–ª–µ—Ç–Ω–∏–µ': '‚òÄÔ∏è',
        '–ª—é–±–æ–≤—å': '‚ù§Ô∏è',
        '–ª—é–±–æ–≤–Ω—ã–µ': '‚ù§Ô∏è',
        '–≤–∞–ª–µ–Ω—Ç–∏–Ω–∫–∞': 'üíù',
        '–ø–∞—Å—Ö–∞': 'ü•ö',
        '–ø–∞—Å—Ö–∞–ª—å–Ω—ã–µ': 'ü•ö',
        '–±–ª–∞–≥–æ–¥–∞—Ä–µ–Ω–∏–µ': 'ü¶É'
    }
    
    # –ü–æ–¥–±–∏—Ä–∞–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–µ–º—ã
    theme_emoji = ''
    for keyword, emoji in theme_emojis.items():
        if keyword in theme.lower():
            theme_emoji = emoji
            break
    
    result = f"üìå <b>–¢–≤–æ—è —Ç–µ–º–∞ –Ω–µ–¥–µ–ª–∏</b>\n\n"
    result += f"<b>1. {theme}</b> {theme_emoji}\n\n"
    
    result += "‚ùóÔ∏è –í—Å–µ —Ç–≤–æ–∏ —Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏. "
    result += "–¢—ã –º–æ–∂–µ—à—å –∑–∞—Ö–æ–¥–∏—Ç—å —Å—é–¥–∞ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö.\n\n"
    
    result += "‚ö°Ô∏è –ù–æ –Ω–µ —Ç–µ—Ä—è–π –≤—Ä–µ–º—è! –ß–µ–º –±—ã—Å—Ç—Ä–µ–µ —ç—Ç–∏ —Ç–µ–º—ã –ø–æ–ø–∞–¥—É—Ç –≤ —Ç–≤–æ–π –ø–æ—Ä—Ç—Ñ–µ–ª—å, "
    result += "—Ç–µ–º –≤—ã—à–µ —à–∞–Ω—Å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–≤–æ–∏ —Ä–∞–±–æ—Ç—ã –ø–æ–ª—É—á–∞—Ç –±–æ–ª—å—à–µ –ø—Ä–æ–¥–∞–∂."
    
    return result
