"""Payment handlers for subscription management."""

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.orm import Session

from config.database import SessionLocal
from database.models import User, SubscriptionType, Limits
from core.payments.boosty_handler import get_payment_handler
from bot.keyboards.main_menu import get_main_menu_keyboard
from bot.keyboards.callbacks import PaymentCallbackData
from bot.lexicon import LEXICON_RU
from bot.utils.safe_edit import safe_edit_message

router = Router()


@router.callback_query(F.data == "upgrade_pro")
async def upgrade_pro_callback(callback: CallbackQuery, user: User):
    """Handle PRO subscription upgrade."""
    
    payment_handler = get_payment_handler()
    discount_percent = payment_handler.calculate_discount(user, SubscriptionType.PRO)
    
    # Create payment link
    async with payment_handler as handler:
        payment_url = await handler.create_subscription_link(
            user.id, 
            SubscriptionType.PRO, 
            discount_percent
        )
    
    if not payment_url:
        await safe_edit_message(
            callback=callback,
            text=LEXICON_RU['payment_link_error'],
            reply_markup=get_main_menu_keyboard(user.subscription_type)
        )
        await callback.answer()
        return
    
    # Show payment information
    subscription_data = payment_handler._get_subscription_data(SubscriptionType.PRO, discount_percent)
    
    if discount_percent > 0:
        payment_text = f"""üèÜ **–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ PRO**

**–¢–∞—Ä–∏—Ñ PRO –≤–∫–ª—é—á–∞–µ—Ç:**
‚Ä¢ 2 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 5 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-5 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏

**–¶–µ–Ω–∞:** ~~{subscription_data['original_price']}~~ **{subscription_data['price']} RUB**
**–°–∫–∏–¥–∫–∞:** {discount_percent}% (—ç–∫–æ–Ω–æ–º–∏—è {subscription_data['discount_amount']} RUB)

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:"""
    else:
        payment_text = f"""üèÜ **–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ PRO**

**–¢–∞—Ä–∏—Ñ PRO –≤–∫–ª—é—á–∞–µ—Ç:**
‚Ä¢ 2 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 5 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-5 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏

**–¶–µ–Ω–∞:** {subscription_data['price']} RUB

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:"""
    
    keyboard = [
        [
            InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url=payment_url)
        ],
        [
            InlineKeyboardButton(text="üìä –°—Ä–∞–≤–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã", callback_data="compare_subscriptions")
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    await safe_edit_message(
        callback=callback,
        text=payment_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()


@router.callback_query(F.data == "upgrade_ultra")
async def upgrade_ultra_callback(callback: CallbackQuery, user: User):
    """Handle ULTRA subscription upgrade."""
    
    payment_handler = get_payment_handler()
    discount_percent = payment_handler.calculate_discount(user, SubscriptionType.ULTRA)
    
    # Create payment link
    async with payment_handler as handler:
        payment_url = await handler.create_subscription_link(
            user.id, 
            SubscriptionType.ULTRA, 
            discount_percent
        )
    
    if not payment_url:
        await safe_edit_message(
            callback=callback,
            text=LEXICON_RU['payment_link_error'],
            reply_markup=get_main_menu_keyboard(user.subscription_type)
        )
        await callback.answer()
        return
    
    # Show payment information
    subscription_data = payment_handler._get_subscription_data(SubscriptionType.ULTRA, discount_percent)
    
    if discount_percent > 0:
        payment_text = f"""üöÄ **–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ ULTRA**

**–¢–∞—Ä–∏—Ñ ULTRA –≤–∫–ª—é—á–∞–µ—Ç:**
‚Ä¢ 4 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 10 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-10 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏

**–¶–µ–Ω–∞:** ~~{subscription_data['original_price']}~~ **{subscription_data['price']} RUB**
**–°–∫–∏–¥–∫–∞:** {discount_percent}% (—ç–∫–æ–Ω–æ–º–∏—è {subscription_data['discount_amount']} RUB)

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:"""
    else:
        payment_text = f"""üöÄ **–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ ULTRA**

**–¢–∞—Ä–∏—Ñ ULTRA –≤–∫–ª—é—á–∞–µ—Ç:**
‚Ä¢ 4 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 10 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-10 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏

**–¶–µ–Ω–∞:** {subscription_data['price']} RUB

–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã:"""
    
    keyboard = [
        [
            InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å", url=payment_url)
        ],
        [
            InlineKeyboardButton(text="üìä –°—Ä–∞–≤–Ω–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã", callback_data="compare_subscriptions")
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    await safe_edit_message(
        callback=callback,
        text=payment_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()


@router.callback_query(F.data == "compare_subscriptions")
async def compare_subscriptions_callback(callback: CallbackQuery, user: User):
    """Show subscription comparison."""
    
    payment_handler = get_payment_handler()
    
    # Calculate discounts
    pro_discount = payment_handler.calculate_discount(user, SubscriptionType.PRO)
    ultra_discount = payment_handler.calculate_discount(user, SubscriptionType.ULTRA)
    
    pro_data = payment_handler._get_subscription_data(SubscriptionType.PRO, pro_discount)
    ultra_data = payment_handler._get_subscription_data(SubscriptionType.ULTRA, ultra_discount)
    
    comparison_text = f"""üìä **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤**

**FREE** (—Ç–µ–∫—É—â–∏–π)
‚Ä¢ 1 —Ç–µ–º–∞ –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
‚Ä¢ –ë–∞–∑–æ–≤—ã–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏
‚Ä¢ ‚ùå –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
‚Ä¢ ‚ùå –¢–æ–ø —Ç–µ–º—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã

**PRO** {'(—Å–æ —Å–∫–∏–¥–∫–æ–π ' + str(pro_discount) + '%)' if pro_discount > 0 else ''}
‚Ä¢ 2 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 5 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-5 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏
‚Ä¢ **–¶–µ–Ω–∞:** {'~~' + str(pro_data['original_price']) + '~~ ' if pro_discount > 0 else ''}{pro_data['price']} RUB

**ULTRA** {'(—Å–æ —Å–∫–∏–¥–∫–æ–π ' + str(ultra_discount) + '%)' if ultra_discount > 0 else ''}
‚Ä¢ 4 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 10 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-10 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏
‚Ä¢ **–¶–µ–Ω–∞:** {'~~' + str(ultra_data['original_price']) + '~~ ' if ultra_discount > 0 else ''}{ultra_data['price']} RUB

–í—ã–±–µ—Ä–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ:"""
    
    keyboard = [
        [
            InlineKeyboardButton(text="üèÜ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ PRO", callback_data="upgrade_pro")
        ],
        [
            InlineKeyboardButton(text="üöÄ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ ULTRA", callback_data="upgrade_ultra")
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    await safe_edit_message(
        callback=callback,
        text=comparison_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()


@router.callback_query(F.data == "compare_free_pro")
async def compare_free_pro_callback(callback: CallbackQuery, user: User):
    """Compare FREE and PRO subscriptions."""
    
    payment_handler = get_payment_handler()
    discount_percent = payment_handler.calculate_discount(user, SubscriptionType.PRO)
    subscription_data = payment_handler._get_subscription_data(SubscriptionType.PRO, discount_percent)
    
    comparison_text = f"""üìä **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ FREE –∏ PRO**

**FREE** (—Ç–µ–∫—É—â–∏–π)
‚Ä¢ 1 —Ç–µ–º–∞ –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞
‚Ä¢ –¢–æ–ª—å–∫–æ –±–∞–∑–æ–≤—ã–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏
‚Ä¢ ‚ùå –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
‚Ä¢ ‚ùå –¢–æ–ø —Ç–µ–º—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã

**PRO** {'(—Å–æ —Å–∫–∏–¥–∫–æ–π ' + str(discount_percent) + '%)' if discount_percent > 0 else ''}
‚Ä¢ 2 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 5 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-5 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏
‚Ä¢ **–¶–µ–Ω–∞:** {'~~' + str(subscription_data['original_price']) + '~~ ' if discount_percent > 0 else ''}{subscription_data['price']} RUB

**–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å —Å PRO:**
‚úÖ –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ç–≤–æ–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è
‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö –ø—Ä–æ–¥–∞–∂
‚úÖ –¢–æ–ø —Ç–µ–º, –∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∞–ª—å–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç
‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Å–µ–∑–æ–Ω–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
‚úÖ –î–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –æ–±—É—á–∞—é—â–∏–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º

–ì–æ—Ç–æ–≤ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ PRO? üöÄ"""
    
    keyboard = [
        [
            InlineKeyboardButton(text="üèÜ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ PRO", callback_data="upgrade_pro")
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    await safe_edit_message(
        callback=callback,
        text=comparison_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()


@router.callback_query(F.data == "compare_pro_ultra")
async def compare_pro_ultra_callback(callback: CallbackQuery, user: User):
    """Compare PRO and ULTRA subscriptions."""
    
    payment_handler = get_payment_handler()
    ultra_discount = payment_handler.calculate_discount(user, SubscriptionType.ULTRA)
    ultra_data = payment_handler._get_subscription_data(SubscriptionType.ULTRA, ultra_discount)
    
    comparison_text = f"""üìä **–°—Ä–∞–≤–Ω–µ–Ω–∏–µ PRO –∏ ULTRA**

**PRO** (—Ç–µ–∫—É—â–∏–π)
‚Ä¢ 2 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 5 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-5 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏

**ULTRA** {'(—Å–æ —Å–∫–∏–¥–∫–æ–π ' + str(ultra_discount) + '%)' if ultra_discount > 0 else ''}
‚Ä¢ 4 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 10 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –¢–æ–ø-10 —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏
‚Ä¢ **–¶–µ–Ω–∞:** {'~~' + str(ultra_data['original_price']) + '~~ ' if ultra_discount > 0 else ''}{ultra_data['price']} RUB

**–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —Å ULTRA:**
‚úÖ –í 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
‚úÖ –í 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —Ç–µ–º
‚úÖ –í 2 —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —Ç–æ–ø —Ç–µ–º
‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å

–ì–æ—Ç–æ–≤ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ ULTRA? üöÄ"""
    
    keyboard = [
        [
            InlineKeyboardButton(text="üöÄ –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ ULTRA", callback_data="upgrade_ultra")
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    await safe_edit_message(
        callback=callback,
        text=comparison_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()


@router.callback_query(PaymentCallbackData.filter(F.plan == "pro_test_discount"))
async def payment_pro_test_discount_callback(callback: CallbackQuery, user: User):
    """Handle PRO subscription with TEST_PRO 50% discount."""
    
    payment_handler = get_payment_handler()
    discount_percent = 50  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞ 50% –¥–ª—è TEST_PRO
    
    # Create payment link
    async with payment_handler as handler:
        payment_url = await handler.create_subscription_link(
            user.id, 
            SubscriptionType.PRO, 
            discount_percent
        )
    
    if not payment_url:
        await safe_edit_message(
            callback=callback,
            text=LEXICON_RU['payment_link_error'],
            reply_markup=get_main_menu_keyboard(user.subscription_type)
        )
        await callback.answer()
        return
    
    # Show payment information with 50% discount
    base_price = 990
    discounted_price = base_price * 0.5
    
    payment_text = f"""üèÜ <b>–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ PRO</b>

<b>–¢–∞—Ä–∏—Ñ PRO –≤–∫–ª—é—á–∞–µ—Ç:</b>
‚Ä¢ 1 –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –≤ –º–µ—Å—è—Ü
‚Ä¢ 5 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏

<b>–¶–µ–Ω–∞:</b> ~~{base_price}‚ÇΩ~~ <b>{discounted_price:.0f}‚ÇΩ/–º–µ—Å—è—Ü</b>
üéâ <b>–°–∫–∏–¥–∫–∞ 50% –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞!</b>

–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:"""
    
    keyboard = [
        [
            InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å PRO", url=payment_url)
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    await safe_edit_message(
        callback=callback,
        text=payment_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()


@router.callback_query(PaymentCallbackData.filter(F.plan == "pro"))
async def payment_pro_std_callback(callback: CallbackQuery, user: User):
    """Handle PRO subscription without discount."""

    payment_handler = get_payment_handler()

    async with payment_handler as handler:
        payment_url = await handler.create_subscription_link(
            user.id,
            SubscriptionType.PRO,
            0
        )

    if not payment_url:
        await safe_edit_message(
            callback=callback,
            text=LEXICON_RU['payment_link_error'],
            reply_markup=get_main_menu_keyboard(user.subscription_type)
        )
        await callback.answer()
        return

    keyboard = [
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å PRO", url=payment_url)],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")]
    ]

    await safe_edit_message(
        callback=callback,
        text=LEXICON_RU['payment_pro_std_details'],
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()


@router.callback_query(PaymentCallbackData.filter(F.plan == "ultra_test_discount"))
async def payment_ultra_test_discount_callback(callback: CallbackQuery, user: User):
    """Handle ULTRA subscription with TEST_PRO 50% discount."""
    
    payment_handler = get_payment_handler()
    discount_percent = 50  # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞ 50% –¥–ª—è TEST_PRO
    
    # Create payment link
    async with payment_handler as handler:
        payment_url = await handler.create_subscription_link(
            user.id, 
            SubscriptionType.ULTRA, 
            discount_percent
        )
    
    if not payment_url:
        await safe_edit_message(
            callback=callback,
            text=LEXICON_RU['payment_link_error'],
            reply_markup=get_main_menu_keyboard(user.subscription_type)
        )
        await callback.answer()
        return
    
    # Show payment information with 50% discount
    base_price = 1990
    discounted_price = base_price * 0.5
    
    payment_text = f"""üöÄ <b>–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ ULTRA</b>

<b>–¢–∞—Ä–∏—Ñ ULTRA –≤–∫–ª—é—á–∞–µ—Ç:</b>
‚Ä¢ 2 –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ –º–µ—Å—è—Ü
‚Ä¢ 10 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞
‚Ä¢ –í—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏

<b>–¶–µ–Ω–∞:</b> ~~{base_price}‚ÇΩ~~ <b>{discounted_price:.0f}‚ÇΩ/–º–µ—Å—è—Ü</b>
üéâ <b>–°–∫–∏–¥–∫–∞ 50% –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞!</b>

–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ:"""
    
    keyboard = [
        [
            InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å ULTRA", url=payment_url)
        ],
        [
            InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")
        ]
    ]
    
    await safe_edit_message(
        callback=callback,
        text=payment_text,
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()


@router.callback_query(PaymentCallbackData.filter(F.plan == "ultra"))
async def payment_ultra_std_callback(callback: CallbackQuery, user: User):
    """Handle ULTRA subscription without discount."""

    payment_handler = get_payment_handler()

    async with payment_handler as handler:
        payment_url = await handler.create_subscription_link(
            user.id,
            SubscriptionType.ULTRA,
            0
        )

    if not payment_url:
        await safe_edit_message(
            callback=callback,
            text=LEXICON_RU['payment_link_error'],
            reply_markup=get_main_menu_keyboard(user.subscription_type)
        )
        await callback.answer()
        return

    keyboard = [
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å ULTRA", url=payment_url)],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="main_menu")]
    ]

    await safe_edit_message(
        callback=callback,
        text=LEXICON_RU['payment_ultra_std_details'],
        reply_markup=InlineKeyboardMarkup(inline_keyboard=keyboard)
    )
    await callback.answer()
