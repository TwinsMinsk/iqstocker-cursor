"""Start command handler."""

from aiogram import Router, F
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from datetime import datetime, timezone, timedelta

from config.database import SessionLocal
from database.models import User, SubscriptionType, Limits
from bot.keyboards.main_menu import get_main_menu_keyboard

router = Router()


@router.message(F.text == "/start")
async def start_command(message: Message, state: FSMContext):
    """Handle /start command."""
    
    # Clear any existing state
    await state.clear()
    
    # Get or create user
    db = SessionLocal()
    try:
        user = db.query(User).filter(User.telegram_id == message.from_user.id).first()
        
        if not user:
            # Create new user with TEST_PRO subscription
            now = datetime.now(timezone.utc)
            test_pro_expires = now + timedelta(days=14)
            
            user = User(
                telegram_id=message.from_user.id,
                username=message.from_user.username,
                first_name=message.from_user.first_name,
                subscription_type=SubscriptionType.TEST_PRO,
                test_pro_started_at=now,
                subscription_expires_at=test_pro_expires
            )
            db.add(user)
            db.flush()  # Get user ID
            
            # Create limits for new user with TEST_PRO benefits
            limits = Limits(
                user_id=user.id,
                analytics_total=1,  # 1 –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
                analytics_used=0,
                themes_total=5,  # 5 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
                themes_used=0,
                top_themes_total=1,  # –¢–æ–ø-5 —Ç–µ–º –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞
                top_themes_used=0
            )
            db.add(limits)
            db.commit()
            
            # Welcome message according to T–ó
            welcome_text = f"""üëã *–ü—Ä–∏–≤–µ—Ç\\! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ IQStocker* üìä

üéâ *–°—é—Ä–ø—Ä–∏–∑\\!* –£ —Ç–µ–±—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Ç–µ—Å—Ç PRO\\-–ø–ª–∞–Ω–∞ –Ω–∞ 2 –Ω–µ–¥–µ–ª–∏\\! 
–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ª–∏–º–∏—Ç–∞—Ö –∏ –ø–æ–¥–ø–∏—Å–∫–µ —Å–º–æ—Ç—Ä–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ üë§ *–ü—Ä–æ—Ñ–∏–ª—å*\\. 
–ù–µ —Ç–µ—Ä—è–π –≤—Ä–µ–º—è \\- 2 –Ω–µ–¥–µ–ª–∏ –ø—Ä–æ–ª–µ—Ç—è—Ç –±—ã—Å—Ç—Ä–æ ‚åõÔ∏è

*–ß—Ç–æ —è —É–º–µ—é:*
üìä *–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è* \\- –∞–Ω–∞–ª–∏–∑ CSV\\-—Ñ–∞–π–ª–æ–≤ —Å –ø—Ä–æ–¥–∞–∂–∞–º–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
üéØ *–¢–µ–º—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–π/—Å—ä–µ–º–∫–∏* \\- –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞ —Ç–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤ —Ä—ã–Ω–∫–∞ –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç–µ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–¥–∞–∂
üèÜ *–¢–æ–ø —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∏ –¥–æ—Ö–æ–¥—É* \\- –ø–æ–¥–±–æ—Ä–∫–∞ —Ç–µ–º, –ø–æ–∫–∞–∑–∞–≤—à–∏—Ö –ª—É—á—à–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ç–≤–æ–µ–º –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
üé• *–í–∏–¥–µ–æ—É—Ä–æ–∫–∏* \\- –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö –ø–æ–ª–µ–∑–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ —Å—Ç–æ–∫–∞–º
üìÖ *–ö–∞–ª–µ–Ω–¥–∞—Ä—å —Å—Ç–æ–∫–µ—Ä–∞* \\- –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –æ —Ç–æ–º, —á—Ç–æ —Å–Ω–∏–º–∞—Ç—å/–≥—Ä—É–∑–∏—Ç—å –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è

*–¢–≤–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–∞—Ä–∏—Ñ:* TEST_PRO \\(–¥–æ {test_pro_expires.strftime('%d.%m.%Y')}\\)
*–î–æ—Å—Ç—É–ø–Ω–æ:* 1 –∞–Ω–∞–ª–∏—Ç–∏–∫–∞, 5 —Ç–µ–º –≤ –Ω–µ–¥–µ–ª—é, –¢–æ–ø\\-5 —Ç–µ–º, —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å, –≤—Å–µ –≤–∏–¥–µ–æ—É—Ä–æ–∫–∏

–í—ã–±–µ—Ä–∏ —Ä–∞–∑–¥–µ–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã\\! üëá"""
            
        else:
            # Check if TEST_PRO subscription expired
            if user.subscription_type == SubscriptionType.TEST_PRO and user.subscription_expires_at:
                if datetime.now(timezone.utc) > user.subscription_expires_at:
                    # Convert to FREE subscription
                    user.subscription_type = SubscriptionType.FREE
                    user.subscription_expires_at = None
                    
                    # Update limits to FREE level
                    if user.limits:
                        user.limits.analytics_total = 0
                        user.limits.themes_total = 1
                        user.limits.top_themes_total = 0
                    
                    db.commit()
            
            # Determine subscription status
            if user.subscription_type == SubscriptionType.TEST_PRO:
                days_left = (user.subscription_expires_at - datetime.now(timezone.utc)).days if user.subscription_expires_at else 0
                status_text = f"–¢–µ—Å—Ç–æ–≤—ã–π PRO (–æ—Å—Ç–∞–ª–æ—Å—å {days_left} –¥–Ω–µ–π)"
            elif user.subscription_type == SubscriptionType.FREE:
                status_text = "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π"
            else:
                status_text = "–ê–∫—Ç–∏–≤–µ–Ω"
            
            welcome_text = f"""üëã *–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {message.from_user.first_name}\\!*

–†–∞–¥ —Å–Ω–æ–≤–∞ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å\\! 

*–¢–≤–æ–π —Ç–∞—Ä–∏—Ñ:* {user.subscription_type.value}
*–°—Ç–∞—Ç—É—Å:* {status_text}

–ß—Ç–æ –±—É–¥–µ–º –¥–µ–ª–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è\\? üëá"""
        
        await message.answer(
            welcome_text,
            reply_markup=get_main_menu_keyboard(user.subscription_type)
        )
        
    finally:
        db.close()