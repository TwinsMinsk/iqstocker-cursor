"""Top themes handler with horizontal navigation."""

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy.orm import Session
from sqlalchemy import desc

from config.database import SessionLocal
from database.models import User, SubscriptionType, TopTheme, CSVAnalysis
from core.analytics.report_generator_fixed import FixedReportGenerator
from bot.lexicon import LEXICON_RU
from bot.keyboards.main_menu import get_main_menu_keyboard
from bot.keyboards.common import get_top_themes_keyboard
from bot.utils.safe_edit import safe_edit_message

router = Router()


@router.callback_query(F.data == "top_themes")
async def top_themes_callback(callback: CallbackQuery, user: User):
    """Handle top themes callback."""
    
    if user.subscription_type == SubscriptionType.FREE:
        # Show limitation message for FREE users
        await safe_edit_message(
            callback=callback,
            text=LEXICON_RU['top_themes_unavailable_free'],
            reply_markup=get_top_themes_keyboard(user.subscription_type)
        )
    else:
        # Get user's top themes from database
        db = SessionLocal()
        try:
            # Get latest CSV analysis
            latest_csv = db.query(CSVAnalysis).filter(
                CSVAnalysis.user_id == user.id,
                CSVAnalysis.status == "COMPLETED"
            ).order_by(desc(CSVAnalysis.created_at)).first()
            
            if not latest_csv:
                # No analytics available
                no_data_text = """üèÜ <b>–¢–æ–ø —Ç–µ–º –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º –∏ –¥–æ—Ö–æ–¥—É</b>

–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

üìä <b>–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:</b>
1. –ó–∞–≥—Ä—É–∑–∏ CSV-—Ñ–∞–π–ª —Å –ø—Ä–æ–¥–∞–∂–∞–º–∏ –≤ —Ä–∞–∑–¥–µ–ª–µ "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø–æ—Ä—Ç—Ñ–µ–ª—è"
2. –î–æ–∂–¥–∏—Å—å –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞
3. –í–µ—Ä–Ω–∏—Å—å —Å—é–¥–∞, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ç–æ–ø-—Ç–µ–º—ã

üí° <b>–°–æ–≤–µ—Ç:</b> —Ç–æ–ø-—Ç–µ–º—ã —Ñ–æ—Ä–º–∏—Ä—É—é—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–≤–æ–∏—Ö —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂ –∏ –ø–æ–º–æ–≥–∞—é—Ç –ø–æ–Ω—è—Ç—å, –∫–∞–∫–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –ª—É—á—à–µ –≤—Å–µ–≥–æ."""
                
                await safe_edit_message(
                    callback=callback,
                    text=no_data_text,
                    reply_markup=get_top_themes_keyboard(user.subscription_type)
                )
                await callback.answer()
                return
            
            # Get top themes for this analysis
            top_themes = db.query(TopTheme).filter(
                TopTheme.csv_analysis_id == latest_csv.id
            ).order_by(TopTheme.rank).all()
            
            if not top_themes:
                # No themes found - generate report from CSV analysis
                from core.analytics.advanced_csv_processor import AdvancedCSVProcessor
                
                # Try to process CSV again to get themes
                processor = AdvancedCSVProcessor()
                try:
                    result = processor.process_csv(
                        csv_path=latest_csv.file_path,
                        portfolio_size=latest_csv.portfolio_size or 100,
                        upload_limit=latest_csv.upload_limit or 50,
                        monthly_uploads=latest_csv.monthly_uploads or 30,
                        acceptance_rate=latest_csv.acceptance_rate or 65.0
                    )
                    
                    # Generate top themes report
                    report_generator = FixedReportGenerator()
                    no_themes_text = report_generator.generate_top_themes_report(
                        result, user.subscription_type.value
                    )
                    
                except Exception as e:
                    # Fallback to simple message
                    no_themes_text = f"""üèÜ <b>–¢–û–ü –¢–ï–ú –ü–û –ü–†–û–î–ê–ñ–ê–ú –ò –î–û–•–û–î–£</b>

–ê–Ω–∞–ª–∏–∑ –∑–∞ {latest_csv.month}.{latest_csv.year}:
–¢–æ–ø —Ç–µ–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.

‚ùóÔ∏è –í—Å–µ —Ç–æ–ø-—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏. –¢—ã –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –º–æ–∂–µ—à—å –∑–∞–π—Ç–∏ —Å—é–¥–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö.

üí° –°–æ–≤–µ—Ç: –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç–∏ —Ç–µ–º—ã –≤ —Å–≤–æ–∏—Ö –±—É–¥—É—â–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏—è—Ö –∏ —Å—ä–µ–º–∫–∞—Ö ‚Äî –æ–Ω–∏ —É–∂–µ –¥–æ–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –Ω–∞ –Ω–∏—Ö –µ—â–µ –±–æ–ª—å—à–µ —Ä–∞–±–æ—Ç."""
                
                await safe_edit_message(
                    callback=callback,
                    text=no_themes_text,
                    reply_markup=get_top_themes_keyboard(user.subscription_type)
                )
                await callback.answer()
                return
            
            # Determine how many themes to show based on subscription
            if user.subscription_type == SubscriptionType.PRO:
                themes_to_show = min(5, len(top_themes))
                themes_text = LEXICON_RU['top_themes_pro']
            else:  # ULTRA
                themes_to_show = min(10, len(top_themes))
                themes_text = LEXICON_RU['top_themes_ultra']
            
            # Format themes
            themes_list = []
            for i, theme in enumerate(top_themes[:themes_to_show], 1):
                themes_list.append(
                    f"{i}. {theme.theme_name} ‚Äî {theme.sales_count} –ø—Ä–æ–¥–∞–∂/{theme.revenue:.2f}$"
                )
            
            top_themes_text = f"""{themes_text}

{chr(10).join(themes_list)}

‚ùóÔ∏è –í—Å–µ —Ç–æ–ø-—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏. –¢—ã –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è –º–æ–∂–µ—à—å –∑–∞–π—Ç–∏ —Å—é–¥–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Ö.

üí° <b>–°–æ–≤–µ—Ç:</b> –∏—Å–ø–æ–ª—å–∑—É–π —ç—Ç–∏ —Ç–µ–º—ã –≤ —Å–≤–æ–∏—Ö –±—É–¥—É—â–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ü–∏—è—Ö –∏ —Å—ä–µ–º–∫–∞—Ö ‚Äî –æ–Ω–∏ —É–∂–µ –¥–æ–∫–∞–∑–∞–ª–∏ —Å–≤–æ—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –∏ —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –Ω–∞ –Ω–∏—Ö –µ—â–µ –±–æ–ª—å—à–µ —Ä–∞–±–æ—Ç."""
            
            await safe_edit_message(
                callback=callback,
                text=top_themes_text,
                reply_markup=get_top_themes_keyboard(user.subscription_type)
            )
            
        finally:
            db.close()
    
    await callback.answer()