#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –¥–∞—Ç–∞–º–∏.
"""

import os
import sys
from pathlib import Path
from datetime import datetime, timezone, timedelta

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env_file = Path("local.env")
if env_file.exists():
    with open(env_file, 'r', encoding='utf-8') as f:
        for line in f:
            line = line.strip()
            if line and not line.startswith('#') and '=' in line:
                key, value = line.split('=', 1)
                os.environ[key] = value

def test_datetime_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –¥–∞—Ç–∞–º–∏."""
    
    print("üïê –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –¥–∞—Ç–∞–º–∏...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç start.py
        from bot.handlers.start import start_command
        print("‚úÖ start.py –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–∞—Ç
        now_utc = datetime.now(timezone.utc)
        test_date_naive = datetime(2025, 12, 31, 23, 59, 59)  # –ë–µ–∑ timezone
        test_date_aware = test_date_naive.replace(tzinfo=timezone.utc)  # –° timezone
        
        print(f"üìÖ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è (UTC): {now_utc}")
        print(f"üìÖ –¢–µ—Å—Ç–æ–≤–∞—è –¥–∞—Ç–∞ (naive): {test_date_naive}")
        print(f"üìÖ –¢–µ—Å—Ç–æ–≤–∞—è –¥–∞—Ç–∞ (aware): {test_date_aware}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ
        try:
            result = now_utc > test_date_aware
            print(f"‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ timezone-aware –¥–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç: {result}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è timezone-aware –¥–∞—Ç: {e}")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å naive –¥–∞—Ç–æ–π
        try:
            result = now_utc > test_date_naive.replace(tzinfo=timezone.utc)
            print(f"‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ naive->aware –¥–∞—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç: {result}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è naive->aware –¥–∞—Ç: {e}")
            return False
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–Ω–µ–π
        try:
            days_diff = (test_date_aware - now_utc).days
            print(f"‚úÖ –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–Ω–µ–π —Ä–∞–±–æ—Ç–∞–µ—Ç: {days_diff} –¥–Ω–µ–π")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –¥–Ω–µ–π: {e}")
            return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_all_handlers_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."""
    
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
    
    try:
        from bot.handlers import start, analytics, themes, top_themes, lessons, calendar, channel, faq, profile
        print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        from bot.utils.markdown import escape_markdown, escape_markdown_preserve_formatting
        print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        import traceback
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    
    print("üöÄ –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –¥–∞—Ç–∞–º–∏")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç
    success1 = test_datetime_fix()
    
    # –¢–µ—Å—Ç 2: –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    success2 = test_all_handlers_import()
    
    print("\n" + "=" * 50)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"üïê –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç: {'‚úÖ OK' if success1 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"ü§ñ –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {'‚úÖ OK' if success2 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    
    if success1 and success2:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üí° –ü—Ä–æ–±–ª–µ–º—ã —Å –¥–∞—Ç–∞–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã.")
        print("üí° –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫.")
        print("üí° –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã.")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏.")

if __name__ == "__main__":
    main()
