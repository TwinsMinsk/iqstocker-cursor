#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Markdown —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env_file = Path("local.env")
if env_file.exists():
    with open(env_file, 'r', encoding='utf-8') as f:
        for line in f:
            line = line.strip()
            if line and not line.startswith('#') and '=' in line:
                key, value = line.split('=', 1)
                os.environ[key] = value

def test_all_handlers_complete():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –ø–æ–ª–Ω—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –ø–æ–ª–Ω—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏...")
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        from bot.handlers import analytics, themes, top_themes, lessons, calendar, channel, faq, profile
        from bot.utils.markdown import escape_markdown, escape_markdown_preserve_formatting
        
        print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        test_cases = [
            "–¢–µ—Å—Ç —Å —Ç–æ—á–∫–æ–π.",
            "–¢–µ—Å—Ç —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º!",
            "–¢–µ—Å—Ç —Å –¥–µ—Ñ–∏—Å–æ–º - —Ç–µ–∫—Å—Ç",
            "–¢–µ—Å—Ç —Å —Å–∫–æ–±–∫–∞–º–∏ (—Ç–µ–∫—Å—Ç)",
            "–¢–µ—Å—Ç —Å –∂–∏—Ä–Ω—ã–º **—Ç–µ–∫—Å—Ç–æ–º**",
            "–¢–µ—Å—Ç —Å –∫—É—Ä—Å–∏–≤–æ–º *—Ç–µ–∫—Å—Ç–æ–º*",
            "–¢–µ—Å—Ç —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º _—Ç–µ–∫—Å—Ç–æ–º_",
            "–¢–µ—Å—Ç —Å –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏ [—Ç–µ–∫—Å—Ç]",
            "–¢–µ—Å—Ç —Å –æ–±—Ä–∞—Ç–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏ `—Ç–µ–∫—Å—Ç`"
        ]
        
        print("\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:")
        
        for i, test_case in enumerate(test_cases, 1):
            escaped = escape_markdown(test_case)
            escaped_preserve = escape_markdown_preserve_formatting(test_case)
            
            print(f"   {i:2d}. –ò—Å—Ö–æ–¥–Ω–∞—è: {test_case}")
            print(f"       –û–±—ã—á–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {escaped}")
            print(f"       –° —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {escaped_preserve}")
            print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_specific_handlers_complete():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –ø–æ–ª–Ω—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏."""
    
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –ø–æ–ª–Ω—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏...")
    
    try:
        from bot.handlers.themes import themes_callback
        from bot.handlers.top_themes import top_themes_callback
        from bot.handlers.lessons import lessons_callback
        from bot.handlers.calendar import calendar_callback
        from bot.handlers.channel import channel_callback
        from bot.handlers.faq import faq_callback
        from bot.handlers.profile import profile_callback
        
        print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        handlers = [
            ("themes", themes_callback),
            ("top_themes", top_themes_callback),
            ("lessons", lessons_callback),
            ("calendar", calendar_callback),
            ("channel", channel_callback),
            ("faq", faq_callback),
            ("profile", profile_callback)
        ]
        
        print("üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏:")
        for name, handler in handlers:
            print(f"   ‚úÖ {name}: {handler.__name__}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_markdown_utils_complete():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—ã Markdown —Å –ø–æ–ª–Ω—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏."""
    
    print("\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—ã Markdown —Å –ø–æ–ª–Ω—ã–º–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏...")
    
    try:
        from bot.utils.markdown import escape_markdown, escape_markdown_preserve_formatting
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏ –∏–∑ –ª–æ–≥–æ–≤
        problematic_cases = [
            "Character '.' is reserved and must be escaped",
            "Character '-' is reserved and must be escaped",
            "Character '!' is reserved and must be escaped",
            "Character '(' is reserved and must be escaped",
            "Character ')' is reserved and must be escaped",
            "Character '*' is reserved and must be escaped",
            "Character '_' is reserved and must be escaped",
            "Character '[' is reserved and must be escaped",
            "Character ']' is reserved and must be escaped",
            "Character '`' is reserved and must be escaped"
        ]
        
        print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏:")
        
        for i, case in enumerate(problematic_cases, 1):
            escaped = escape_markdown(case)
            escaped_preserve = escape_markdown_preserve_formatting(case)
            
            print(f"   {i:2d}. –ò—Å—Ö–æ–¥–Ω–∞—è: {case}")
            print(f"       –û–±—ã—á–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {escaped}")
            print(f"       –° —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {escaped_preserve}")
            print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Ç–∏–ª–∏—Ç: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_imports_complete():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã escape_markdown –≤–æ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö."""
    
    print("\nüì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã escape_markdown –≤–æ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö...")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç escape_markdown
        handlers_to_check = [
            'bot.handlers.themes',
            'bot.handlers.top_themes', 
            'bot.handlers.lessons',
            'bot.handlers.calendar',
            'bot.handlers.channel',
            'bot.handlers.faq',
            'bot.handlers.profile',
            'bot.handlers.analytics'
        ]
        
        for handler_name in handlers_to_check:
            try:
                module = __import__(handler_name, fromlist=['escape_markdown'])
                if hasattr(module, 'escape_markdown'):
                    print(f"   ‚úÖ {handler_name}: escape_markdown –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
                else:
                    print(f"   ‚ùå {handler_name}: escape_markdown –ù–ï –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
                    return False
            except Exception as e:
                print(f"   ‚ùå {handler_name}: –æ—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ - {e}")
                return False
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤: {e}")
        import traceback
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    
    print("üöÄ –¢–µ—Å—Ç –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Markdown —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 70)
    
    # –¢–µ—Å—Ç 1: –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    success1 = test_all_handlers_complete()
    
    # –¢–µ—Å—Ç 2: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    success2 = test_specific_handlers_complete()
    
    # –¢–µ—Å—Ç 3: –£—Ç–∏–ª–∏—Ç—ã Markdown
    success3 = test_markdown_utils_complete()
    
    # –¢–µ—Å—Ç 4: –ò–º–ø–æ—Ä—Ç—ã
    success4 = test_imports_complete()
    
    print("\n" + "=" * 70)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"üîß –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏: {'‚úÖ OK' if success1 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"ü§ñ –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏: {'‚úÖ OK' if success2 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"üìù –£—Ç–∏–ª–∏—Ç—ã Markdown: {'‚úÖ OK' if success3 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"üì¶ –ò–º–ø–æ—Ä—Ç—ã escape_markdown: {'‚úÖ OK' if success4 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    
    if success1 and success2 and success3 and success4:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üí° –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–ø–µ—Ä—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä—É—é—Ç Markdown.")
        print("üí° –ë–æ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–∞–¥–∞—Ç—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é.")
        print("üí° –í—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä—É—é—Ç—Å—è.")
        print("üí° –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã escape_markdown —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã.")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏.")

if __name__ == "__main__":
    main()
