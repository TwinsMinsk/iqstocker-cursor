"""Final test after cleanup."""

import os
import sys

# Set environment variables for MVP
os.environ["DATABASE_URL"] = "sqlite:///iqstocker.db"
os.environ["REDIS_URL"] = "redis://localhost:6379/0"
os.environ["ADMIN_SECRET_KEY"] = "test_secret_key_123"
os.environ["ADMIN_PASSWORD"] = "admin123"

# Add project root to path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.database import SessionLocal
from database.models import User, CSVAnalysis, AnalyticsReport, AnalysisStatus

def test_after_cleanup():
    """Test after complete cleanup."""
    
    print("üß™ –¢–µ—Å—Ç –ø–æ—Å–ª–µ –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏")
    print("=" * 50)
    
    db = SessionLocal()
    
    try:
        # Check admin user
        admin_user = db.query(User).filter(User.telegram_id == 811079407).first()
        if admin_user:
            print(f"‚úÖ –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {admin_user.username}")
            print(f"   –ü–æ–¥–ø–∏—Å–∫–∞: {admin_user.subscription_type}")
        else:
            print("‚ùå –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # Check CSV analyses
        csv_analyses = db.query(CSVAnalysis).filter(
            CSVAnalysis.user_id == admin_user.id
        ).all()
        
        print(f"üìä CSV –∞–Ω–∞–ª–∏–∑–æ–≤: {len(csv_analyses)}")
        
        completed_count = 0
        total_sales = 0
        total_revenue = 0
        
        for analysis in csv_analyses:
            print(f"\nüìã –ê–Ω–∞–ª–∏–∑ ID {analysis.id}:")
            print(f"   –§–∞–π–ª: {analysis.file_path}")
            print(f"   –°—Ç–∞—Ç—É—Å: {analysis.status}")
            print(f"   –ü–µ—Ä–∏–æ–¥: {analysis.month}.{analysis.year}")
            print(f"   –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞: {analysis.content_type}")
            
            if analysis.status == AnalysisStatus.COMPLETED:
                completed_count += 1
                
                # Check analytics report
                report = db.query(AnalyticsReport).filter(
                    AnalyticsReport.csv_analysis_id == analysis.id
                ).first()
                
                if report:
                    print(f"   üìà –û—Ç—á–µ—Ç: {report.total_sales} –ø—Ä–æ–¥–∞–∂, ${report.total_revenue}")
                    print(f"   üìä % –ø–æ—Ä—Ç—Ñ–µ–ª—è: {report.portfolio_sold_percent}%")
                    print(f"   üÜï –î–æ–ª—è –Ω–æ–≤—ã—Ö —Ä–∞–±–æ—Ç: {report.new_works_sales_percent}%")
                    
                    total_sales += report.total_sales
                    total_revenue += report.total_revenue
                else:
                    print("   ‚ùå –û—Ç—á–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
                # TopTheme model was removed - skip theme checking
                print(f"   üèÜ –¢–æ–ø —Ç–µ–º: N/A (–º–æ–¥–µ–ª—å TopTheme —É–¥–∞–ª–µ–Ω–∞)")
        
        print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∞–Ω–∞–ª–∏–∑–æ–≤: {completed_count}")
        print(f"üí∞ –û–±—â–∏–µ –ø—Ä–æ–¥–∞–∂–∏: {total_sales}")
        print(f"üíµ –û–±—â–∏–π –¥–æ—Ö–æ–¥: ${total_revenue}")
        
        # Check for any enum errors
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ enum –∑–Ω–∞—á–µ–Ω–∏–π:")
        for analysis in csv_analyses:
            if analysis.content_type:
                print(f"   ID {analysis.id}: {analysis.content_type} ‚úÖ")
        
        print(f"\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        db.close()

if __name__ == "__main__":
    test_after_cleanup()
    
    print("\n" + "=" * 50)
    print("üöÄ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞!")
    print("–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –±–æ—Ç–∞ –±–µ–∑ –æ—à–∏–±–æ–∫!")
    print("=" * 50)
