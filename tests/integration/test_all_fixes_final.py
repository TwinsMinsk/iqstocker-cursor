#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Markdown —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env_file = Path("local.env")
if env_file.exists():
    with open(env_file, 'r', encoding='utf-8') as f:
        for line in f:
            line = line.strip()
            if line and not line.startswith('#') and '=' in line:
                key, value = line.split('=', 1)
                os.environ[key] = value

def test_all_handlers_import():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤."""
    
    print("ü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤...")
    
    try:
        from bot.handlers import start, analytics, themes, top_themes, lessons, calendar, channel, faq, profile
        print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        from bot.utils.markdown import escape_markdown, escape_markdown_preserve_formatting
        print("‚úÖ –§—É–Ω–∫—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_escape_markdown_functionality():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è."""
    
    print("\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    try:
        from bot.utils.markdown import escape_markdown
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
        test_cases = [
            ("–¢–µ—Å—Ç —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º!", "–¢–µ—Å—Ç —Å –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º\\!"),
            ("–¢–µ—Å—Ç —Å —Ç–æ—á–∫–æ–π.", "–¢–µ—Å—Ç —Å —Ç–æ—á–∫–æ–π\\."),
            ("–¢–µ—Å—Ç —Å –¥–µ—Ñ–∏—Å–æ–º - —Ç–µ–∫—Å—Ç", "–¢–µ—Å—Ç —Å –¥–µ—Ñ–∏—Å–æ–º \\- —Ç–µ–∫—Å—Ç"),
            ("–¢–µ—Å—Ç —Å —Å–∫–æ–±–∫–∞–º–∏ (—Ç–µ–∫—Å—Ç)", "–¢–µ—Å—Ç —Å —Å–∫–æ–±–∫–∞–º–∏ \\(—Ç–µ–∫—Å—Ç\\)"),
            ("–¢–µ—Å—Ç —Å –ø–ª—é—Å–æ–º + —Ç–µ–∫—Å—Ç", "–¢–µ—Å—Ç —Å –ø–ª—é—Å–æ–º \\+ —Ç–µ–∫—Å—Ç"),
            ("–¢–µ—Å—Ç —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º _—Ç–µ–∫—Å—Ç–æ–º_", "–¢–µ—Å—Ç —Å –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–µ–º \\_—Ç–µ–∫—Å—Ç–æ–º\\_"),
            ("–¢–µ—Å—Ç —Å –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏ [—Ç–µ–∫—Å—Ç]", "–¢–µ—Å—Ç —Å –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–º–∏ —Å–∫–æ–±–∫–∞–º–∏ \\[—Ç–µ–∫—Å—Ç\\]"),
            ("–¢–µ—Å—Ç —Å –æ–±—Ä–∞—Ç–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏ `—Ç–µ–∫—Å—Ç`", "–¢–µ—Å—Ç —Å –æ–±—Ä–∞—Ç–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏ \\`—Ç–µ–∫—Å—Ç\\`"),
            ("–¢–µ—Å—Ç —Å –∑–≤–µ–∑–¥–æ—á–∫–æ–π *—Ç–µ–∫—Å—Ç–æ–º*", "–¢–µ—Å—Ç —Å –∑–≤–µ–∑–¥–æ—á–∫–æ–π \\*—Ç–µ–∫—Å—Ç–æ–º\\*"),
            ("–¢–µ—Å—Ç —Å –∂–∏—Ä–Ω—ã–º **—Ç–µ–∫—Å—Ç–æ–º**", "–¢–µ—Å—Ç —Å –∂–∏—Ä–Ω—ã–º \\*\\*—Ç–µ–∫—Å—Ç–æ–º\\*\\*")
        ]
        
        print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã:")
        
        all_passed = True
        for i, (input_text, expected) in enumerate(test_cases, 1):
            result = escape_markdown(input_text)
            if result == expected:
                print(f"   {i:2d}. ‚úÖ {input_text} -> {result}")
            else:
                print(f"   {i:2d}. ‚ùå {input_text} -> {result} (–æ–∂–∏–¥–∞–ª–æ—Å—å: {expected})")
                all_passed = False
        
        return all_passed
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_f_string_escaping():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ f-—Å—Ç—Ä–æ–∫–∞—Ö."""
    
    print("\nüîß –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ f-—Å—Ç—Ä–æ–∫–∞—Ö...")
    
    try:
        from bot.utils.markdown import escape_markdown
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ f-—Å—Ç—Ä–æ–∫–∞—Ö
        test_name = "–¢–µ—Å—Ç! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        test_status = "–ê–∫—Ç–∏–≤–µ–Ω!"
        test_date = "15.10.2025"
        
        # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Ç–¥–µ–ª—å–Ω–æ
        escaped_name = escape_markdown(test_name)
        escaped_status = escape_markdown(test_status)
        escaped_date = escape_markdown(test_date)
        
        # –°–æ–∑–¥–∞–µ–º f-—Å—Ç—Ä–æ–∫—É —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏
        message = f"–ü—Ä–∏–≤–µ—Ç, {escaped_name}! –°—Ç–∞—Ç—É—Å: {escaped_status}. –î–∞—Ç–∞: {escaped_date}"
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é
        final_message = escape_markdown(message)
        
        print(f"üë§ –ò–º—è: {test_name} -> {escaped_name}")
        print(f"üìä –°—Ç–∞—Ç—É—Å: {test_status} -> {escaped_status}")
        print(f"üìÖ –î–∞—Ç–∞: {test_date} -> {escaped_date}")
        print(f"üí¨ –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {final_message}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è f-—Å—Ç—Ä–æ–∫: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_lessons_handler():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ lessons."""
    
    print("\nüé• –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ lessons...")
    
    try:
        from bot.handlers.lessons import lessons_callback
        print("‚úÖ lessons_callback –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —É—Ä–æ–∫–æ–≤
        from bot.utils.markdown import escape_markdown
        
        test_lesson_titles = [
            "–£—Ä–æ–∫ 1. –û—Å–Ω–æ–≤—ã!",
            "–£—Ä–æ–∫ 2. –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏.",
            "–£—Ä–æ–∫ 3. –°–µ–∫—Ä–µ—Ç—ã (–º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞)",
            "–£—Ä–æ–∫ 4. –§–∏–Ω–∞–ª—å–Ω—ã–π + –±–æ–Ω—É—Å"
        ]
        
        print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏–π —É—Ä–æ–∫–æ–≤:")
        for i, title in enumerate(test_lesson_titles, 1):
            escaped = escape_markdown(title)
            print(f"   {i}. {title} -> {escaped}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è lessons: {e}")
        import traceback
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))))
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    
    print("üöÄ –¢–µ—Å—Ç –≤—Å–µ—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Markdown —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
    success1 = test_all_handlers_import()
    
    # –¢–µ—Å—Ç 2: –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    success2 = test_escape_markdown_functionality()
    
    # –¢–µ—Å—Ç 3: F-—Å—Ç—Ä–æ–∫–∏
    success3 = test_f_string_escaping()
    
    # –¢–µ—Å—Ç 4: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ lessons
    success4 = test_lessons_handler()
    
    print("\n" + "=" * 60)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"ü§ñ –ò–º–ø–æ—Ä—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {'‚úÖ OK' if success1 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"üîß –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {'‚úÖ OK' if success2 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"üîß F-—Å—Ç—Ä–æ–∫–∏: {'‚úÖ OK' if success3 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"üé• –û–±—Ä–∞–±–æ—Ç—á–∏–∫ lessons: {'‚úÖ OK' if success4 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    
    if success1 and success2 and success3 and success4:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üí° –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫.")
        print("üí° –í—Å–µ —Å–∏–º–≤–æ–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä—É—é—Ç—Å—è.")
        print("üí° F-—Å—Ç—Ä–æ–∫–∏ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ.")
        print("üí° –û–±—Ä–∞–±–æ—Ç—á–∏–∫ lessons –∏—Å–ø—Ä–∞–≤–ª–µ–Ω.")
        print("üí° –ë–æ—Ç –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –æ—à–∏–±–æ–∫ Markdown.")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã.")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏.")

if __name__ == "__main__":
    main()
