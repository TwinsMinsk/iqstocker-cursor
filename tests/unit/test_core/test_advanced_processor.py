"""Test advanced CSV processor."""

import os
import sys

# Set environment variables for MVP
os.environ["DATABASE_URL"] = "sqlite:///iqstocker.db"
os.environ["REDIS_URL"] = "redis://localhost:6379/0"
os.environ["ADMIN_SECRET_KEY"] = "test_secret_key_123"
os.environ["ADMIN_PASSWORD"] = "admin123"

# Add project root to path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from core.analytics.advanced_csv_processor import AdvancedCSVProcessor

def test_advanced_processor():
    """Test advanced CSV processor."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ CSV –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞")
    print("=" * 50)
    
    processor = AdvancedCSVProcessor()
    
    # Test with advanced CSV
    if os.path.exists('advanced_test_portfolio.csv'):
        print("üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–º CSV —Ñ–∞–π–ª–æ–º...")
        
        try:
            result = processor.process_csv(
                csv_path='advanced_test_portfolio.csv',
                portfolio_size=100,
                upload_limit=50,
                monthly_uploads=30,
                acceptance_rate=65.0
            )
            
            print("‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π CSV –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"–ü–µ—Ä–∏–æ–¥: {result.period_human_ru}")
            print(f"–ü—Ä–æ–¥–∞–∂: {result.rows_used}")
            print(f"–î–æ—Ö–æ–¥: ${result.total_revenue_usd}")
            print(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞—Å—Å–µ—Ç–æ–≤: {result.unique_assets_sold}")
            print(f"% –ø–æ—Ä—Ç—Ñ–µ–ª—è –ø—Ä–æ–¥–∞–Ω: {result.portfolio_sold_percent}%")
            print(f"–î–æ–ª—è –Ω–æ–≤—ã—Ö —Ä–∞–±–æ—Ç: {result.new_works_sales_percent}%")
            
            # Generate report
            report = processor.generate_bot_report(result)
            print("\nüìã –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç:")
            print("-" * 30)
            print(report[:500] + "..." if len(report) > 500 else report)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ CSV: {e}")
            import traceback
            traceback.print_exc()
    
    # Test with simple CSV
    if os.path.exists('simple_test_portfolio.csv'):
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–æ—Å—Ç—ã–º CSV —Ñ–∞–π–ª–æ–º...")
        
        try:
            result = processor.process_csv(
                csv_path='simple_test_portfolio.csv',
                portfolio_size=100,
                upload_limit=50,
                monthly_uploads=30,
                acceptance_rate=65.0
            )
            
            print("‚úÖ –ü—Ä–æ—Å—Ç–æ–π CSV –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"–ü–µ—Ä–∏–æ–¥: {result.period_human_ru}")
            print(f"–ü—Ä–æ–¥–∞–∂: {result.rows_used}")
            print(f"–î–æ—Ö–æ–¥: ${result.total_revenue_usd}")
            print(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞—Å—Å–µ—Ç–æ–≤: {result.unique_assets_sold}")
            
            # Generate report
            report = processor.generate_bot_report(result)
            print("\nüìã –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç:")
            print("-" * 30)
            print(report[:500] + "..." if len(report) > 500 else report)
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ—Å—Ç–æ–≥–æ CSV: {e}")
            import traceback
            traceback.print_exc()

if __name__ == "__main__":
    test_advanced_processor()
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±–æ—Ç–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏.")
    print("=" * 50)
