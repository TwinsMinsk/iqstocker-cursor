#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV —Ñ–∞–π–ª–æ–≤.
"""

import os
import sys
import traceback
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

def test_csv_processing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É CSV —Ñ–∞–π–ª–æ–≤."""
    
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV —Ñ–∞–π–ª–æ–≤")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã
    print("1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã...")
    try:
        from core.analytics.advanced_csv_processor import AdvancedCSVProcessor
        from core.analytics.report_generator_fixed import FixedReportGenerator
        from database.models import CSVAnalysis, AnalyticsReport, TopTheme
        from config.database import SessionLocal
        print("‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã —É—Å–ø–µ—à–Ω—ã")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        traceback.print_exc()
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    print("\n2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    try:
        db = SessionLocal()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        from sqlalchemy import text
        result = db.execute(text("SELECT name FROM sqlite_master WHERE type='table' AND name IN ('csv_analyses', 'analytics_reports', 'top_themes')"))
        tables = [row[0] for row in result.fetchall()]
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã —Ç–∞–±–ª–∏—Ü—ã: {tables}")
        
        if 'csv_analyses' not in tables:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ csv_analyses –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        if 'analytics_reports' not in tables:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ analytics_reports –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
        if 'top_themes' not in tables:
            print("‚ùå –¢–∞–±–ª–∏—Ü–∞ top_themes –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            return False
            
        db.close()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        traceback.print_exc()
        return False
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
    print("\n3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞...")
    try:
        processor = AdvancedCSVProcessor()
        print("‚úÖ AdvancedCSVProcessor —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: {e}")
        traceback.print_exc()
        return False
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤
    print("\n4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –æ—Ç—á–µ—Ç–æ–≤...")
    try:
        generator = FixedReportGenerator()
        print("‚úÖ FixedReportGenerator —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞: {e}")
        traceback.print_exc()
        return False
    
    # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é uploads
    print("\n5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é uploads...")
    try:
        uploads_dir = Path("uploads")
        if not uploads_dir.exists():
            uploads_dir.mkdir(exist_ok=True)
            print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è uploads —Å–æ–∑–¥–∞–Ω–∞")
        else:
            print("‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è uploads —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–µ–π uploads: {e}")
        return False
    
    # 6. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π CSV —Ñ–∞–π–ª
    print("\n6. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π CSV —Ñ–∞–π–ª...")
    try:
        test_csv_path = "uploads/test_analysis.csv"
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π CSV
        test_data = """2025-01-15T10:00:00+00:00,12345,Test Photo 1,custom,1.50,photos,test1.jpg,user1,HD
2025-01-16T11:00:00+00:00,12346,Test Photo 2,subscription,2.00,photos,test2.jpg,user1,XXL
2025-01-17T12:00:00+00:00,12347,Test Video 1,custom,3.00,videos,test3.mp4,user1,HD1080"""
        
        with open(test_csv_path, 'w', encoding='utf-8') as f:
            f.write(test_data)
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π CSV —Å–æ–∑–¥–∞–Ω: {test_csv_path}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ CSV: {e}")
        return False
    
    # 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É CSV
    print("\n7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É CSV...")
    try:
        result = processor.process_csv(
            csv_path=test_csv_path,
            portfolio_size=100,
            upload_limit=50,
            monthly_uploads=30,
            acceptance_rate=65.0
        )
        
        print(f"‚úÖ CSV –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ:")
        print(f"   - –ü–µ—Ä–∏–æ–¥: {result.period_human_ru}")
        print(f"   - –ü—Ä–æ–¥–∞–∂: {result.rows_used}")
        print(f"   - –î–æ—Ö–æ–¥: ${result.total_revenue_usd}")
        print(f"   - –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∞—Å—Å–µ—Ç–æ–≤: {result.unique_assets_sold}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ CSV: {e}")
        traceback.print_exc()
        return False
    
    # 8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞
    print("\n8. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞...")
    try:
        report = generator.generate_monthly_report(result)
        print(f"‚úÖ –û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω (–¥–ª–∏–Ω–∞: {len(report)} —Å–∏–º–≤–æ–ª–æ–≤)")
        print(f"–ü–µ—Ä–≤—ã–µ 200 —Å–∏–º–≤–æ–ª–æ–≤: {report[:200]}...")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞: {e}")
        traceback.print_exc()
        return False
    
    # 9. –û—á–∏—Å—Ç–∫–∞
    print("\n9. –û—á–∏—Å—Ç–∫–∞...")
    try:
        if os.path.exists(test_csv_path):
            os.remove(test_csv_path)
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã")
    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")
    
    print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    return True

def test_bot_handler():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞."""
    
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞...")
    print("=" * 50)
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        from bot.handlers.analytics import process_csv_analysis
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))))
        print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if hasattr(process_csv_analysis, '__call__'):
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è process_csv_analysis –¥–æ—Å—Ç—É–ø–Ω–∞")
        else:
            print("‚ùå –§—É–Ω–∫—Ü–∏—è process_csv_analysis –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞: {e}")
        traceback.print_exc()
        return False
    
    return True

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ CSV –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_file = Path("local.env")
    if env_file.exists():
        print("üîß –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
        with open(env_file, 'r', encoding='utf-8') as f:
            for line in f:
                line = line.strip()
                if line and not line.startswith('#') and '=' in line:
                    key, value = line.split('=', 1)
                    os.environ[key] = value
        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã
    success = test_csv_processing()
    if success:
        test_bot_handler()
    
    print("\n" + "=" * 60)
    if success:
        print("üéâ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –ï—Å–ª–∏ –±–æ—Ç –≤—Å–µ –µ—â–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –±–æ—Ç–∞.")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ CSV.")
        print("üí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Ç–µ—Å—Ç.")