#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è Markdown —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è.
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
env_file = Path("local.env")
if env_file.exists():
    with open(env_file, 'r', encoding='utf-8') as f:
        for line in f:
            line = line.strip()
            if line and not line.startswith('#') and '=' in line:
                key, value = line.split('=', 1)
                os.environ[key] = value

def test_complete_escape_markdown():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Markdown."""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è Markdown...")
    
    try:
        from bot.handlers.analytics import escape_markdown
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏
        test_cases = [
            # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
            "CSV-—Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω!",
            "–†–∞–∑–º–µ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤):",
            "–õ–∏–º–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.",
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:",
            
            # –ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
            "üìä **–†–∞–∑–º–µ—Ä —Ç–≤–æ–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è** (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤):",
            "üì§ **–¢–≤–æ–π –ª–∏–º–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –º–µ—Å—è—Ü:**",
            "üìà **–°–∫–æ–ª—å–∫–æ –æ–±—ã—á–Ω–æ –≥—Ä—É–∑–∏—à—å –∑–∞ –º–µ—Å—è—Ü:**",
            "‚úÖ **% –ø—Ä–∏–µ–º–∫–∏** (–Ω–∞–ø—Ä–∏–º–µ—Ä, 65):",
            "üí∞ **% –ø—Ä–∏–±—ã–ª–∏** (–Ω–∞–ø—Ä–∏–º–µ—Ä, 25):",
            "üé® **–û—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–ø —Ç–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞** (AI/—Ñ–æ—Ç–æ/–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏/–≤–∏–¥–µ–æ/–≤–µ–∫—Ç–æ—Ä):",
            
            # –°–ª–æ–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            "‚úÖ –ì–æ—Ç–æ–≤–æ\n–§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω - —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª–∞–º.",
            "–°–ø–∞—Å–∏–±–æ, –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è–ª ‚úÖ\n–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ (1-2 –º–∏–Ω—É—Ç—ã)",
            "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: FileNotFoundError",
            
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —Ç–∏–ø–æ–≤: AI, —Ñ–æ—Ç–æ, –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏, –≤–∏–¥–µ–æ, –≤–µ–∫—Ç–æ—Ä.",
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∑–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.",
            "% –ø—Ä–∏–µ–º–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 100.",
            "% –ø—Ä–∏–±—ã–ª–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 100.",
            
            # –°–∏–º–≤–æ–ª—ã –¥–ª—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            "–¢–µ–∫—Å—Ç —Å *–∂–∏—Ä–Ω—ã–º* –∏ _–∫—É—Ä—Å–∏–≤–æ–º_",
            "–°—Å—ã–ª–∫–∞ [–Ω–∞ —Å–∞–π—Ç](https://example.com)",
            "–ö–æ–¥ `–≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö`",
        ]
        
        print("‚úÖ –§—É–Ω–∫—Ü–∏—è escape_markdown –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        print("\nüìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ:")
        
        for i, test_case in enumerate(test_cases, 1):
            escaped = escape_markdown(test_case)
            print(f"   {i:2d}. –ò—Å—Ö–æ–¥–Ω–∞—è: {test_case}")
            print(f"       –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è: {escaped}")
            print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_all_message_handlers():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π."""
    
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    try:
        from bot.handlers.analytics import (
            handle_csv_upload, 
            handle_portfolio_size,
            handle_upload_limit,
            handle_monthly_uploads,
            handle_acceptance_rate,
            handle_profit_margin,
            handle_content_type,
            escape_markdown
        )
        
        print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
        test_messages = [
            "CSV-—Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω!",
            "üìä **–†–∞–∑–º–µ—Ä —Ç–≤–æ–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è** (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤):",
            "üì§ **–¢–≤–æ–π –ª–∏–º–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –≤ –º–µ—Å—è—Ü:**",
            "üìà **–°–∫–æ–ª—å–∫–æ –æ–±—ã—á–Ω–æ –≥—Ä—É–∑–∏—à—å –∑–∞ –º–µ—Å—è—Ü:**",
            "‚úÖ **% –ø—Ä–∏–µ–º–∫–∏** (–Ω–∞–ø—Ä–∏–º–µ—Ä, 65):",
            "üí∞ **% –ø—Ä–∏–±—ã–ª–∏** (–Ω–∞–ø—Ä–∏–º–µ—Ä, 25):",
            "üé® **–û—Å–Ω–æ–≤–Ω–æ–π —Ç–∏–ø —Ç–≤–æ–µ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞** (AI/—Ñ–æ—Ç–æ/–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏/–≤–∏–¥–µ–æ/–≤–µ–∫—Ç–æ—Ä):",
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —Ç–∏–ø–æ–≤: AI, —Ñ–æ—Ç–æ, –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏, –≤–∏–¥–µ–æ, –≤–µ–∫—Ç–æ—Ä.",
            "‚úÖ –ì–æ—Ç–æ–≤–æ\n–§–∞–π–ª –æ–±—Ä–∞–±–æ—Ç–∞–Ω - —Ç–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–∞–∑–¥–µ–ª–∞–º.",
            "–°–ø–∞—Å–∏–±–æ, –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—è–ª ‚úÖ\n–ü–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ (1-2 –º–∏–Ω—É—Ç—ã)",
            "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: FileNotFoundError",
        ]
        
        print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:")
        for i, msg in enumerate(test_messages, 1):
            escaped = escape_markdown(msg)
            print(f"   {i:2d}. {escaped}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        import traceback
        traceback.print_exc()
        return False

def test_specific_problematic_cases():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏."""
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏...")
    
    try:
        from bot.handlers.analytics import escape_markdown
        
        # –°–ª—É—á–∞–∏, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–∑—ã–≤–∞–ª–∏ –æ—à–∏–±–∫–∏
        problematic_cases = [
            "üìä **–†–∞–∑–º–µ—Ä —Ç–≤–æ–µ–≥–æ –ø–æ—Ä—Ç—Ñ–µ–ª—è** (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤):",  # –° –∂–∏—Ä–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –∏ —Å–∫–æ–±–∫–∞–º–∏
            "‚úÖ CSV-—Ñ–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω!",  # –° –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º –∑–Ω–∞–∫–æ–º
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ. –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑:",  # –° —Ç–æ—á–∫–æ–π
            "–õ–∏–º–∏—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º.",  # –° —Ç–æ—á–∫–æ–π
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∑–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º.",  # –° —Ç–æ—á–∫–æ–π
            "% –ø—Ä–∏–µ–º–∫–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 100.",  # –° —Ç–æ—á–∫–æ–π
            "% –ø—Ä–∏–±—ã–ª–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 100.",  # –° —Ç–æ—á–∫–æ–π
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —Ç–∏–ø–æ–≤: AI, —Ñ–æ—Ç–æ, –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏, –≤–∏–¥–µ–æ, –≤–µ–∫—Ç–æ—Ä.",  # –° —Ç–æ—á–∫–æ–π
        ]
        
        print("‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏:")
        
        for i, case in enumerate(problematic_cases, 1):
            escaped = escape_markdown(case)
            print(f"   {i}. –ò—Å—Ö–æ–¥–Ω–∞—è: {case}")
            print(f"      –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è: {escaped}")
            print()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤: {e}")
        import traceback
        traceback.print_exc()
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    
    print("üöÄ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π Markdown —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 70)
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    success1 = test_complete_escape_markdown()
    
    # –¢–µ—Å—Ç 2: –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    success2 = test_all_message_handlers()
    
    # –¢–µ—Å—Ç 3: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏
    success3 = test_specific_problematic_cases()
    
    print("\n" + "=" * 70)
    print("üìã –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"üîß –ü–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è: {'‚úÖ OK' if success1 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"ü§ñ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π: {'‚úÖ OK' if success2 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    print(f"üîç –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ —Å–ª—É—á–∞–∏: {'‚úÖ OK' if success3 else '‚ùå –ü—Ä–æ–±–ª–µ–º–∞'}")
    
    if success1 and success2 and success3:
        print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        print("üí° Markdown —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        print("üí° –ë–æ—Ç –Ω–µ –¥–æ–ª–∂–µ–Ω –ø–∞–¥–∞—Ç—å –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª—é–±—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
        print("üí° –í—Å–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä—É—é—Ç—Å—è.")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã.")
        print("üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –∏ –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏.")

if __name__ == "__main__":
    main()
