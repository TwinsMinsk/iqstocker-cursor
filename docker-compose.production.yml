version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: iqstocker
      POSTGRES_USER: iqstocker_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iqstocker_user -d iqstocker"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # IQStocker Bot Application
  iqstocker-bot:
    build: .
    environment:
      # Bot Configuration
      BOT_TOKEN: ${BOT_TOKEN}
      WEBHOOK_URL: ${WEBHOOK_URL}
      WEBHOOK_PATH: ${WEBHOOK_PATH}
      
      # Database Configuration
      DATABASE_URL: postgresql://iqstocker_user:${POSTGRES_PASSWORD}@postgres:5432/iqstocker
      DB_POOL_SIZE: 10
      DB_MAX_OVERFLOW: 20
      DB_POOL_RECYCLE: 3600
      DB_POOL_TIMEOUT: 30
      
      # Redis Configuration
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379/0
      REDIS_CACHE_TTL: 2592000
      
      # AI Configuration
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      AI_RATE_LIMIT_PER_MINUTE: 60
      AI_RATE_LIMIT_PER_HOUR: 1000
      AI_RATE_LIMIT_PER_DAY: 10000
      
      # Admin Panel Configuration
      ADMIN_SECRET_KEY: ${ADMIN_SECRET_KEY}
      ADMIN_USERNAME: ${ADMIN_USERNAME}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      ADMIN_SESSION_TIMEOUT: 3600
      
      # Payment Configuration
      BOOSTY_API_KEY: ${BOOSTY_API_KEY}
      BOOSTY_CLIENT_ID: ${BOOSTY_CLIENT_ID}
      BOOSTY_CLIENT_SECRET: ${BOOSTY_CLIENT_SECRET}
      BOOSTY_WEBHOOK_SECRET: ${BOOSTY_WEBHOOK_SECRET}
      
      # Application Settings
      DEBUG: false
      HOST: 0.0.0.0
      PORT: 8000
      LOG_LEVEL: INFO
      MAX_FILE_SIZE: 10485760
      UPLOAD_FOLDER: uploads
      
      # Subscription Settings
      TEST_PRO_DURATION_DAYS: 14
      PRO_DISCOUNT_PERCENT: 50
      FREE_DISCOUNT_PERCENT: 30
      
      # Limits per subscription
      FREE_ANALYTICS_LIMIT: 0
      FREE_THEMES_LIMIT: 1
      TEST_PRO_ANALYTICS_LIMIT: 1
      TEST_PRO_THEMES_LIMIT: 5
      PRO_ANALYTICS_LIMIT: 2
      PRO_THEMES_LIMIT: 5
      PRO_TOP_THEMES_LIMIT: 5
      ULTRA_ANALYTICS_LIMIT: 4
      ULTRA_THEMES_LIMIT: 10
      ULTRA_TOP_THEMES_LIMIT: 10
      
      # AI Analysis Settings
      NEW_WORKS_MONTHS: 3
      ADOBE_STOCK_RATE_LIMIT: 10
      
      # Security Settings
      IP_WHITELIST_ENABLED: ${IP_WHITELIST_ENABLED:-false}
      IP_WHITELIST_ADDRESSES: ${IP_WHITELIST_ADDRESSES}
      
      # Monitoring
      SENTRY_DSN: ${SENTRY_DSN}
    
    ports:
      - "8000:8000"
      - "5000:5000"
    volumes:
      - uploads_data:/app/uploads
      - logs_data:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - iqstocker-bot
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local
  logs_data:
    driver: local

networks:
  default:
    name: iqstocker-network
