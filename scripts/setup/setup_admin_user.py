"""Setup admin user with full access and auto-reset on startup."""

import os
import sys
from datetime import datetime

# Set environment variables for MVP
os.environ["DATABASE_URL"] = "sqlite:///iqstocker.db"
os.environ["REDIS_URL"] = "redis://localhost:6379/0"
os.environ["ADMIN_SECRET_KEY"] = "test_secret_key_123"
os.environ["ADMIN_PASSWORD"] = "admin123"

# Add project root to path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from config.database import SessionLocal
from database.models import User, SubscriptionType, Limits

def setup_admin_user():
    """Setup admin user with full access."""
    
    print("üëë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("=" * 50)
    
    admin_telegram_id = 811079407
    
    db = SessionLocal()
    try:
        # Find or create admin user
        admin_user = db.query(User).filter(User.telegram_id == admin_telegram_id).first()
        
        if not admin_user:
            # Create new admin user
            admin_user = User(
                telegram_id=admin_telegram_id,
                username="admin_user",
                first_name="Admin",
                subscription_type=SubscriptionType.ULTRA,
                created_at=datetime.utcnow()
            )
            db.add(admin_user)
            db.flush()
            print("‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∞–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {admin_user.username}")
        
        # Update admin user to ULTRA with full access
        admin_user.subscription_type = SubscriptionType.ULTRA
        admin_user.subscription_expires_at = None  # No expiration
        admin_user.test_pro_started_at = None
        
        # Get or create limits
        admin_limits = db.query(Limits).filter(Limits.user_id == admin_user.id).first()
        
        if not admin_limits:
            admin_limits = Limits(user_id=admin_user.id)
            db.add(admin_limits)
        
        # Set unlimited access for admin
        admin_limits.analytics_total = 999  # Unlimited analytics
        admin_limits.analytics_used = 0
        admin_limits.themes_total = 999     # Unlimited themes
        admin_limits.themes_used = 0
        admin_limits.top_themes_total = 999 # Unlimited top themes
        admin_limits.top_themes_used = 0
        
        db.commit()
        
        print(f"‚úÖ –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω:")
        print(f"  - ID: {admin_user.telegram_id}")
        print(f"  - –ü–æ–¥–ø–∏—Å–∫–∞: {admin_user.subscription_type.value}")
        print(f"  - –ê–Ω–∞–ª–∏—Ç–∏–∫ –¥–æ—Å—Ç—É–ø–Ω–æ: {admin_limits.analytics_total}")
        print(f"  - –¢–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ: {admin_limits.themes_total}")
        print(f"  - –¢–æ–ø-—Ç–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ: {admin_limits.top_themes_total}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
        db.rollback()
    finally:
        db.close()

def reset_admin_user():
    """Reset admin user data for fresh testing."""
    
    print("\nüîÑ –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("=" * 50)
    
    admin_telegram_id = 811079407
    
    db = SessionLocal()
    try:
        admin_user = db.query(User).filter(User.telegram_id == admin_telegram_id).first()
        
        if not admin_user:
            print("‚ùå –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        # Reset user data
        admin_user.username = "admin_user"
        admin_user.first_name = "Admin"
        admin_user.subscription_type = SubscriptionType.ULTRA
        admin_user.subscription_expires_at = None
        admin_user.test_pro_started_at = None
        admin_user.created_at = datetime.utcnow()  # Reset creation date
        
        # Reset limits
        admin_limits = db.query(Limits).filter(Limits.user_id == admin_user.id).first()
        
        if admin_limits:
            admin_limits.analytics_used = 0
            admin_limits.themes_used = 0
            admin_limits.top_themes_used = 0
        
        db.commit()
        
        print("‚úÖ –î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–±—Ä–æ—à–µ–Ω—ã")
        print("  - –í—Å–µ –ª–∏–º–∏—Ç—ã –æ–±–Ω—É–ª–µ–Ω—ã")
        print("  - –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        print("  - –ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–º—É —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö: {e}")
        db.rollback()
    finally:
        db.close()

def show_admin_status():
    """Show admin user status."""
    
    print("\nüìä –°—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω—Å–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("=" * 50)
    
    admin_telegram_id = 811079407
    
    db = SessionLocal()
    try:
        admin_user = db.query(User).filter(User.telegram_id == admin_telegram_id).first()
        
        if not admin_user:
            print("‚ùå –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        admin_limits = db.query(Limits).filter(Limits.user_id == admin_user.id).first()
        
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {admin_user.username} ({admin_user.telegram_id})")
        print(f"üìÖ –°–æ–∑–¥–∞–Ω: {admin_user.created_at.strftime('%d.%m.%Y %H:%M')}")
        print(f"üíé –ü–æ–¥–ø–∏—Å–∫–∞: {admin_user.subscription_type.value}")
        
        if admin_limits:
            print(f"üìä –ê–Ω–∞–ª–∏—Ç–∏–∫: {admin_limits.analytics_used}/{admin_limits.analytics_total}")
            print(f"üéØ –¢–µ–º: {admin_limits.themes_used}/{admin_limits.themes_total}")
            print(f"üèÜ –¢–æ–ø-—Ç–µ–º: {admin_limits.top_themes_used}/{admin_limits.top_themes_total}")
        
    finally:
        db.close()

if __name__ == "__main__":
    setup_admin_user()
    reset_admin_user()
    show_admin_status()
    
    print("\n" + "=" * 50)
    print("üéâ –ê–¥–º–∏–Ω—Å–∫–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤!")
    print("ID: 811079407")
    print("–ü–æ–¥–ø–∏—Å–∫–∞: ULTRA (–±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π)")
    print("–í—Å–µ –ª–∏–º–∏—Ç—ã —Å–±—Ä–æ—à–µ–Ω—ã –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 50)
