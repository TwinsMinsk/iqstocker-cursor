#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è LLM-—Å–µ—Ä–≤–∏—Å–∞."""

import os
from cryptography.fernet import Fernet

def setup_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è."""
    
    print("üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è LLM-—Å–µ—Ä–≤–∏—Å–∞")
    print("=" * 60)
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–∞ —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è
    encryption_key = Fernet.generate_key().decode()
    print(f"‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–ª—é—á —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: {encryption_key}")
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    env_vars = {
        'ENCRYPTION_KEY': encryption_key,
        'GEMINI_API_KEY': 'your_gemini_api_key_here',
        'OPENAI_API_KEY': 'your_openai_api_key_here', 
        'ANTHROPIC_API_KEY': 'your_anthropic_api_key_here',
        'DATABASE_URL': 'sqlite:///iqstocker.db',
        'REDIS_URL': 'redis://localhost:6379/0',
        'ADMIN_SECRET_KEY': 'your_secret_key_for_admin_panel',
        'ADMIN_USERNAME': 'admin',
        'ADMIN_PASSWORD': 'admin_password',
        'LOG_LEVEL': 'INFO',
        'DEBUG': 'False'
    }
    
    for key, value in env_vars.items():
        os.environ[key] = value
        print(f"‚úÖ {key} = {value}")
    
    print("\nüìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:")
    print("1. –ó–∞–º–µ–Ω–∏—Ç–µ 'your_gemini_api_key_here' –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API-–∫–ª—é—á Gemini")
    print("2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ OpenAI/Anthropic –∫–ª—é—á–∏ –≤–º–µ—Å—Ç–æ Gemini")
    print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ ADMIN_SECRET_KEY –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    print("4. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞")
    
    return True

if __name__ == "__main__":
    setup_environment()
